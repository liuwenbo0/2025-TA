#include "Solution.h"
vector<int> Solution::perfect_permutation(int n) {
    vector<int> permResult(n, 0);
    
    if (n == 1) {
        permResult[0] = 1;
        return permResult;
    } else {
        vector<int> midPermResult = perfect_permutation(n / 2);

        int idx = 0;
        while (idx < n / 2) {
            permResult[idx] = midPermResult[idx] * 2 - 1;
            permResult[idx + n / 2] = midPermResult[idx] * 2;
            ++idx;
        }

        if (n % 2 != 0) {
            vector<int> oddMidPermResult = perfect_permutation(n / 2 + 1);
            idx = 0;
            while (idx < n / 2 + 1) {
                permResult[idx] = oddMidPermResult[idx] * 2 - 1;
                ++idx;
            }
            
            idx = 0;
            while (idx < n / 2) {
                permResult[idx + n / 2 + 1] = midPermResult[idx] * 2;
                ++idx;
            }
        }
    }
    return permResult;
}
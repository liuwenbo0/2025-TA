#include "Solution.h"
#include <iostream>  
#include <climits> 
int Solution::find_maximum_crossing_subarray(vector<int> &A, int low, int mid, int high) {
    int left_sum= INT_MIN / 2;
    int sum1=0;
    for(int i=mid;i>=low;i--){
        sum1=sum1+A[i];
        if(sum1>left_sum ){
            left_sum =sum1;
        }
    }
    int right_sum=INT_MIN / 2;
    int sum2=0;
    for(int j=mid+1;j<=high;j++){
        sum2=sum2+A[j];
        if(sum2>right_sum ){
            right_sum =sum2;
        }
    }
    return left_sum+right_sum;
}
int Solution::find_maximum_subarray(vector<int> &A, int low, int high) {
    if(high==low){
        return A[low];
    }else{
        int mid =(low+high)/2;
        int left_sum=find_maximum_subarray(A,low,mid);
        int right_sum=find_maximum_subarray(A,mid+1,high);
        int cross_sum=find_maximum_crossing_subarray(A,low,mid,high);
        if((left_sum>=right_sum)&&(left_sum>=cross_sum)){
             return left_sum;
        }
        else if((right_sum>=left_sum)&&(right_sum>=cross_sum)){
            return right_sum;
        } 
        else{
            return cross_sum;
        }
    }
}
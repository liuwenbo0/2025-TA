#include "Solution.h"
#include <iostream>
#include <cmath>
using namespace std;

vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    // 请在这里完成你的代码
    int k = 0, m = n,t=1;
    while(1)
    {
        m = m/2;
        if(m==0) break;
        ++k;
    }

     for(int s=0;s<n;++s){
    	ans[s][0]=s+1;
    	ans[0][s]=s+1;
	}
    for(int i=0;i<k;++i)
    {
    	int j,l;
        t*=2;
        for(j=t/2;j<t;++j)
        {
            for(l=t/2;l<t;++l)
            {
                ans[j][l]=ans[j-t/2][l-t/2];
            }
        }
        for(j=1;j<t/2;j++)
        {
            for(l=t/2;l<t;l++)
            {
                ans[j][l]=ans[j][l-t/2]+t/2;
            }
        }
        for(j=t/2;j<t;j++)
        {
            for(l=1;l<t/2;l++)
            {
                ans[j][l]=ans[j-t/2][l]+t/2;
            }
        }
    }
   

    return ans;
}
#include "Solution.h"
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    // ans[i][j]表示矩阵的第i行第j列
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    // 请在这里完成你的代码
if(n==1)
    {
      ans[0][0]=1;
      return ans;
    }
    int num=n/2;
    ans=round_robin_schedule(num);
    int originalSize = ans.size();
    ans.resize(2 * originalSize);  
    for (int i = 0; i < 2 * originalSize; ++i) {
    ans[i].resize(2 * originalSize); 
}
    for(int i=0;i<num;++i)
    {
      for(int j=0;j<num;++j)
      {
        ans[i+num][j+num]=ans[i][j];
      }
    }
    for(int i=0;i<num;++i)
    {
      for(int j=0;j<num;++j)
      {
        ans[i+num][j]=ans[i][j]+num;
      }
    }
    for(int i=num;i<num*2;++i)
    {
      for(int j=0;j<num;++j)
      {
        ans[i-num][j+num]=ans[i][j];
      }
    }
    return ans;
  }
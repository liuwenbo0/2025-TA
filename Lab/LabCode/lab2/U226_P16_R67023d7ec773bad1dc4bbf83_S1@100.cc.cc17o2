#include "Solution.h"
int Solution::find_maximum_crossing_subarray(vector<int> &A,int low,int mid,int high) {
    int sum=0,left_sum=INT_MIN,right_sum=INT_MIN;
    for(int i=mid;i>=low;i--){
        sum+=A[i];
        if(sum>left_sum){
            left_sum=sum;
        }
    }
    sum=0;
    for(int i=mid+1;i<=high;i++){
        sum+=A[i];
        if(sum>right_sum){
            right_sum=sum;
        }
    }
    return left_sum+right_sum;
    // 请在这里完成你的代码

}
int Solution::find_maximum_subarray(vector<int> &A,int low,int high) {
    if(low==high){
        return(A[low]);
    }
    else{
        int mid=(low+high)/2;
        int left=0,right=0,cross=0;
        left=Solution::find_maximum_subarray(A,low,mid);
        right=Solution::find_maximum_subarray(A,mid+1,high);
        cross=Solution::find_maximum_crossing_subarray(A,low,mid,high);
        if(left>=right&&left>=cross){return left;}
        else if(right>=left&&right>=cross){return right;}
        else {return cross;}
    }
    // 请在这里完成你的代码

    
    return 0;
}
#include "Solution.h"
vector<vector<int> > Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
for (int i = 0; i < n; i++) { 

        ans[0][i] = i + 1; 

    } 
    int begin = 1; 
    for (int separate = 1; separate <= log2(n); separate++) { 
        int half = n / (1 << separate); 
        for (int flag = 0; flag < half; flag++) { 
            for (int i = begin; i < 2 * begin; i++) { 
                for (int j = begin; j < 2 * begin; j++) { 
                    ans[i][j + flag * 2 * begin] = ans[i - begin][j + flag * 2 * begin - begin]; 
                    ans[i][j + flag * 2 * begin - begin] = ans[i - begin][j + flag * 2 * begin]; 
                } 
            } 
        } 
        begin *= 2; 
    } 
    return ans;
}
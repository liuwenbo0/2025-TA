#include "Solution.h"
vector<std::vector<int>> Solution::round_robin_schedule(int n) 
{
  std::vector<std::vector<int>> ans;
  ans.resize(n, std::vector<int>(n, 0));
  if (n == 1) 
  {
    ans[0][0] = 1;
    return ans;
  }
  int m = n / 2;
  std::vector<std::vector<int>> left_schedule = round_robin_schedule(m);
  for (int i = 0; i < m; i++) 
  {
    for (int j = 0; j < m; j++) 
    {
      ans[i][j] = left_schedule[i][j];
    }
  }
  for (int i = 0; i < m; i++) 
  {
    for (int j = m; j < n; j++) 
    {
      ans[i][j] = left_schedule[i][j - m] + m;
    }
  }
  for (int i = m; i < n; i++) 
  {
    for (int j = 0; j < m; j++)
     {
      ans[i][j] = left_schedule[i - m][j] + m;
    }
  }
  for (int i = m; i < n; i++) 
  {
    for (int j = m; j < n; j++) 
    {
      ans[i][j] = left_schedule[i - m][j - m];
    }
  }
  return ans;
}
#include <iostream>
#include <vector>
using namespace std;

//任务二 分治
int test2(vector<int> &tree, int idx) {
    int length = tree.size();
    if (idx >= length || tree[idx] == -1) return 0;
    int sum = max(test2(tree, 2 * idx + 1), test2(tree, 2 * idx + 2)) + tree[idx];//
    return sum;
}

int main(void) {
    //建立树
    vector<int> tree; 
    int leaf, node, high = 0; 
    long long sum = 0; 
    //录入树
    while (cin >> leaf) tree.push_back(leaf);

    if (tree[0] == -1) {
        cout << 0 << endl << 0 << endl << 0;
        return 0;
    }

    node = tree.size();
    leaf = 0;

    // 任务一
    if (node) {
        leaf = 1;
        while (leaf <= node) {
            leaf *= 2;
            high++;
        }
    }
    //任务三
    bool eleft = false, eright = false; 
    for (int i = 0; i < node; ++i) {
        if (i * 2 + 1 < node && tree[i * 2 + 1] != -1) eleft = true;
        if (i * 2 + 2 < node && tree[i * 2 + 2] != -1) eright = true;
        if (eleft || eright) {
            if (eleft && eright && tree[i] > tree[i * 2 + 1] && tree[i] > tree[i * 2 + 2]) {
                sum += tree[i]; 
            } else if (eleft && tree[i] > tree[i * 2 + 1] && !eright) {
                sum += tree[i];
            } else if (eright && tree[i] > tree[i * 2 + 2] && !eleft) {
                sum += tree[i];
            }
        }
        eleft = false; 
        eright = false; 
    }

    cout << high << endl; 
    cout << test2(tree, 0) << endl; 
    cout << sum << endl; 

    return 0; // 结束程序
}
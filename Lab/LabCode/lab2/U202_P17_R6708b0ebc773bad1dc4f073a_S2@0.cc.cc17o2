#include "Solution.h"
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    vector<int>odd_num;
    vector<int>dou_num;
    int i=0,t=0,a=1,s=2;
    while(i<n){
        if(i%2==0&&(i/2)%2==0){
            odd_num.push_back(i);
        }
        if(i%2==0&&(i/2)%2!=0){
            dou_num.push_back(i);
        }
        i++;
    }
    while(i<n){
        ans[0][i]=i+1;
        i++;
    }
    while(t<n-1){
        ans[1][t]=ans[0][t+1];
        ans[1][t+1]=ans[0][t];
        t=t+2;
    }
    while(s<n){
        int b=0;
        while(b<n){
            if(a==1){
                if((b+1)%s==0){
                    a=0;
                }
                for(int k=s;k<2*s;k++){
                    ans[0+k][b+s]=ans[k%s][b];
                }
            }
            else if(a==0){
                if((b+1)%s==0){
                    a=1;
                }
                for(int k=s;k<2*s;k++){
                    ans[0+k][b-s]=ans[k%s][b];
                }
            }
            b++;
        }
        s=2*s;
    }
    return ans;
}
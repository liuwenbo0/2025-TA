#include "Solution.h"
   vector<vector<int>> Solution::round_robin_schedule(int n) {
        // 如此构造一个二维数组（ nxn 矩阵）
         // 如此构造一个二维数组（ nxn 矩阵）
        vector<vector<int> > ans;
        for (int i = 0; i < n; i++) {
            ans.push_back(vector<int>(n, 0));
        }
        // 请在这里完成你的代码
        vector<int> a(n,0);
        vector<int> c(n,0);
        for(int j = 0;j<=n-1;j++){
            for(int i = 0;i<=n-1;i++){
                for(int l =0 ;l<=n-1;l++){
                    a[l] = 0;
                    c[l] = 0;
                }

                if(j == 0){
                    ans[i][j] = i+1;
                }
                if(i == 0)
                    ans[i][j] = j+1;
                if(ans[i][j] == 0){
                   for(int k=0;k<=j-1;k++){
                    if(ans[i][k]!=0){
                        a[ans[i][k]-1] = 1;
                    }
                   }
                   for(int p = 0;p<=n-1;p++){
                    if(ans[p][j]!=0)
                        c[ans[p][j]-1] = 1;
                   }
                   for(int t = 1;t<=n;t++){
                    if(a[t-1]==0&&c[t-1]==0){
                        ans[i][j] = t;
                        break;
                    }
                   }
                        }
                    
                ans[ans[i][j]-1][j] = i+1;
                
            }
        }

        return ans;
    }
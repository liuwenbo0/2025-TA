#include "Solution.h"
void print(vector<vector<int>> &a) {
    int m = a.size(), n = a[0].size();
    for (int i = 0; i < m; ++i) {
        for (int j = 0; j < n; ++j) {
            cout << a[i][j] << ' ';
        }
        cout << endl;
    }
}
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    // 请在这里完成你的代码
    ans[0][0] = 1, ans[1][1] = 1, ans[0][1] = 2, ans[1][0] = 2;
    int temp = 2, m = 2;
    while(temp < n) {
        m = temp;
        temp *= 2;
        for (int i = m; i < temp; ++i) {//填左下角的内容
            for (int j = 0; j < m; ++j) {
                ans[i][j] = ans[i - m][j] + m;
            }
        }
        for (int i = 0; i < m; ++i) {//填右上角内容
            for (int j = m; j < temp; ++j) {
                ans[i][j] = ans[i][j - m] + m;
            }
        }
        for (int i = m; i < temp; ++i) {//填右下角内容
            for (int j = m; j < temp; ++j) {
                ans[i][j] = ans[i - m][j - m];
            }
        }
    }
    //print(ans);
    return ans;
  }
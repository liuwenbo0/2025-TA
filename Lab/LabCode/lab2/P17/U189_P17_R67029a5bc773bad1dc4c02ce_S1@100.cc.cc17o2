#include "Solution.h"
void table(vector<vector<int> > &a,int n,int d)
    {
      if(d>=n)
      return;
      for(int i=0;i<d;i++)
      {
        for(int j=0;j<d;j++)
        {
          a[i+d][j+d]=a[i][j];
          a[i+d][j]=a[i][j]+d;
          a[i][j+d]=a[i][j]+d;
        }
      }
      table(a,n,2*d);
    }
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    ans[0][0]=1;
    table(ans,n,1);

    return ans;
  }
#include "Solution.h"
#include<iostream>
#include<vector>
using namespace std;
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
       vector<int>odd_num;
    vector<int>dou_num;
    for (int i = 0; i < n; i++)
    {
        if (i % 2 == 0 && (i / 2) % 2 == 0)
        {
            odd_num.push_back(i);
        }
        if (i % 2 == 0 && (i / 2) % 2 != 0)
        {
            dou_num.push_back(i);
        }
        else
        {
            continue;
        }
    }
    int flag = 1;
    for (int i = 0; i < n; i++)
    {
        ans[0][i] = i + 1;
    }
    for (int j = 0; j < n; j += 2)
    {
        ans[1][j] = ans[0][j + 1];
        ans[1][j + 1] = ans[0][j];
    }
    for (int k = 2; k < n; k *= 2)
    {
        for (int con = 0; con < n; con++)
        {
            if (flag == 1)
            {
                if ((con + 1) % k == 0)
                {
                    flag = 0;
                }
                for (int p = k; p < 2 * k; p++)
                {
                    ans[0 + p][con + k] = ans[p%k][con];
                }
                continue;
            }
            if (flag == 0)
            {
                if ((con + 1) % k == 0)
                {
                    flag = 1;
                }
                for (int p = k; p < 2 * k; p++)
                {
                    ans[0 + p][con - k] = ans[p%k][con];
                }
                continue;
            }
        }
    }
    return ans;
  }
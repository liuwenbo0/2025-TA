#include "Solution.h"
vector<vector<int>> Solution::round_robin_schedule(int n) 
{
    // 初始化一个 n x n 的二维向量，所有元素均为0
    vector<vector<int>> ans;
    for(int i=0; i<n; i++)
    {
      ans.push_back(vector<int>(n, 0));
    }
    // 设置矩阵的前四个元素，形成第一个"十"字
    ans[0][0]=1, ans[1][1]=1, ans[0][1]=2, ans[1][0]=2;
    // 初始化变量a和b，其中a用于控制总的填充范围，b用于控制每轮填充的步长
    int a=2, b=2, i, j;
    // 使用while循环进行填充，直到a达到n
    while(a<n)
    {
        b=a;  // 在每一轮开始时，将a的当前值赋给b，用于后续计算
        a*=2;  // 将a的值翻倍，为下一轮填充做准备
        // 填充矩阵的对角线上方部分
        for(i=b; i<a; i++) 
        {
            for(j=0; j<b; j++)
            {
                ans[i][j]=ans[i-b][j]+b;  // 将当前元素设置为上方元素的值加上步长b
            }
        }
        // 填充矩阵的对角线下方部分
        for(i=b; i<a; i++) 
        {
            for(j=b; j<a; j++) 
            {
                ans[i][j]=ans[i-b][j-b];  // 将当前元素设置为左上方元素的值
            }
        }
        // 填充矩阵的对角线右侧部分
        for(i=0; i<b; i++) 
        {
            for(j=b; j<a; j++) 
            {
                ans[i][j]=ans[i][j-b]+b;  // 将当前元素设置为左方元素的值加上步长b
            }
        }
        
    }
    return ans;  // 返回填充好的矩阵
}
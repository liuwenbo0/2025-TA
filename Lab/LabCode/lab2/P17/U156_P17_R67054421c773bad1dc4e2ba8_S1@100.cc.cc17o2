#include "Solution.h"
#include <vector>
using namespace std;


void func(vector<vector<int>>& ans, int n, int low) {
    if (n == 2) {
        ans[low][low] = low + 1;
        ans[low][low + 1] = low + 2;
        ans[low + 1][low] = low + 2;
        ans[low + 1][low + 1] = low + 1;
        return;
    }
    else{
        int mid = n / 2;
        func(ans, mid, low);
        func(ans, mid, low + mid);
        for (int i = 0; i < mid; ++i) {
            for (int j = 0; j < mid; ++j) {
                int t = ans[low + i][low + j];
                ans[low + i][low + mid + j] = t + mid;
                ans[low + mid + i][low + j] = t + mid;
                ans[low + mid + i][low + mid + j] = t;
            }
        }
    }
}

vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
        ans.push_back(vector<int>(n, 0));
        ans[i][0] = i + 1;
    }
    // 请在这里完成你的代码
    func(ans, n, 0);
    return ans;
}
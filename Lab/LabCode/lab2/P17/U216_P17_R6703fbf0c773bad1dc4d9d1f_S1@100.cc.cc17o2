#include "Solution.h"

vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 初始化一个 n x n 的矩阵，让元素都为0
    vector<vector<int>> result(n, vector<int>(n, 0));
    
    // 如果只有一个任务，函数直接返回
    if (n == 1) {
        result[0][0] = 1;
        return result;
    }

    // 采用递归的方式创建一个 n/2 x n/2 的矩阵
    vector<vector<int>> sub_matrix = round_robin_schedule(n / 2);

    // 将子矩阵的内容复制到最终结果矩阵的相对应位置
    for (int i = 0; i < n / 2; ++i) {
        for (int j = 0; j < n / 2; ++j) {
            result[i][j] = sub_matrix[i][j];
            result[i + n / 2][j + n / 2] = sub_matrix[i][j];
            result[i + n / 2][j] = sub_matrix[i][j] + n / 2;
            result[i][j + n / 2] = sub_matrix[i][j] + n / 2;
        }
    }

    return result;
}
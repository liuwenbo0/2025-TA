#include "Solution.h"
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    if(n>=4){
        vector<vector<int> > bf=round_robin_schedule(n/2);
        vector<vector<int> > pbf(n/2,vector<int> (n/2));
        for(int i=0;i<n/2;i++){
            for(int j=0;j<n/2;j++){
                pbf[i][j]=bf[i][j]+n/2;
            }
        }
        for(int i=0;i<n/2;i++){
            for(int j=0;j<n/2;j++){
                ans[i][j]=bf[i][j];
            }
        }
        for(int i=n/2;i<n;i++){
            for(int j=0;j<n/2;j++){
                ans[i][j]=pbf[i-n/2][j];
            }
        }
        for(int i=0;i<n/2;i++){
            for(int j=n/2;j<n;j++){
                ans[i][j]=pbf[i][j-n/2];
            }
        }
        for(int i=n/2;i<n;i++){
            for(int j=n/2;j<n;j++){
                ans[i][j]=bf[i-n/2][j-n/2];
            }
        }
        return ans;
    }
    else return {{1,2},{2,1}};
}
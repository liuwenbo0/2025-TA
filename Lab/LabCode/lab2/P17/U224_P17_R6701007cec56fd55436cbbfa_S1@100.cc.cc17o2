#include "Solution.h"
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    // 请在这里完成你的代码
    vector<vector<int> > a;
    for(int i=0; i<n; i++) {
    	a.push_back(vector<int>(n, 0));
      	ans[i][0] = i+1;
    }
    for(int j = 1; j < n; j++){
        vector<int> b(n);
    	for(int i=0; i < n; i++){
    		b[i] = 0;
		}
        for(int i = 0; i < n; i++){
        	for(int k=1; k <= n; k++){
                if(i != k-1 && a[k-1][i] == 0 && b[k-1] == 0 && b[i] == 0){
            	ans[i][j] = k;
            	ans[k-1][j] = i+1;
            	a[k-1][i] = 1;
            	a[i][k-1] = 1;
            	b[k-1] = 1;
            	b[i] = 1;
            	break;
            	}
        	} 
		}
        	
	}
    
    return ans;
  }
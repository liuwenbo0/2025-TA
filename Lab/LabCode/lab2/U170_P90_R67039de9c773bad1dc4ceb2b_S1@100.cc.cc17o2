#include <iostream>
#include <vector>
using namespace std;
int Gettreeheight(int wood[],int gen,int n)
{
    int left_height,right_height;
    if(wood[gen]==-1||gen>=n) return 0;
    else
    {
        left_height=Gettreeheight(wood,gen*2+1,n);
        right_height=Gettreeheight(wood,gen*2+2,n);
        if(left_height>=right_height) 
        {
          return left_height+1;
        }
        else return right_height+1;
    }
}
int Maxroad(int wood[],int gen,int n)
{
    int left_number=0,right_number=0;
    if(wood[gen]==-1||gen>=n) 
    {
      return 0;
    }
    else
    {
        left_number+=Maxroad(wood,gen*2+1,n);
        right_number+=Maxroad(wood,gen*2+2,n);
        if(right_number >= left_number) 
        {
        return right_number+=wood[gen];
        }
        else return left_number+=wood[gen];
    }
}
int Findspecialarea(int wood[],int gen,int n)
{
    if(wood[gen] == -1||gen>=n) 
    {
    return 0;
    }
    else if(wood[gen*2+1]==-1&&wood[gen*2+2]==-1) 
    {
    return 0;
    }
    else if((gen*2+1)>=n&&(gen*2+2)>=n) 
    {
    return 0;
    }
    else if(wood[gen]>wood[gen*2+1]&&wood[gen]>wood[gen*2+2]) 
    {
    return wood[gen] + Findspecialarea(wood,gen*2+1,n)+Findspecialarea(wood,gen*2+2,n);
    }
    else return Findspecialarea(wood,gen*2+1,n) + Findspecialarea(wood,gen*2+2,n);
}
int main()
{
    int number,i=0;
    int wood[10000000];
    while(cin>>number)
    {
        wood[i++]=number;
    }
    cout << Gettreeheight(wood,0,i) << endl;
    cout << Maxroad(wood,0,i) << endl;
    cout << Findspecialarea(wood,0,i) << endl;
    return 0;
}
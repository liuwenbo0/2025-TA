#include "Solution.h"
int Solution::find_maximum_crossing_subarray(vector<int> &A, int low, int mid, int high) {
    // 请在这里完成你的代码
    int s=0,ls=0,rs=0;
    for(int i=mid;i>=low;i--){
        s+=A[i];
        if(s>ls) ls=s;
    }
    s=0;
    for(int i=mid+1;i<=high;i++){
        s+=A[i];
        if(s>rs) rs=s;
    }
    return (ls+rs);
}
int Solution::find_maximum_subarray(vector<int> &A, int low, int high) {
    // 请在这里完成你的代码
    if(low==high) return A[low];
    int mid=(low+high)/2;
    int ls=Solution::find_maximum_subarray(A,low,mid);
    int rs=Solution::find_maximum_subarray(A,mid+1,high);
    int cs=Solution::find_maximum_crossing_subarray(A,low,mid,high);
    if(ls>=rs&&ls>=cs) return ls;
    else if(rs>=ls&&rs>=cs) return rs;
    else return cs;
}
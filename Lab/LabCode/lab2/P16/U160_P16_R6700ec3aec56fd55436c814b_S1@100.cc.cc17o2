#include "Solution.h"
#include <vector>
#include <algorithm> 
#include <climits>
using namespace std;
int Solution::find_maximum_crossing_subarray(vector<int> &A, int low, int mid, int high) {
    int leftmax=-10000,rightmax=-10000;
    int temp=0;
    for(int i=mid;i>=low;i--)
    {
        temp+=A[i];
        if(temp>leftmax)
        {
            leftmax=temp;
        }
    }
    temp=0;
    for(int i=mid+1;i<=high;i++)
    {
        temp+=A[i];
         if(temp>rightmax)
        {
        rightmax=temp;
        }
    }
    return rightmax+leftmax;
}
int Solution::find_maximum_subarray(vector<int> &A, int low, int high) {
    if (high==low)
    {
        return A[low];
    }
    int mid=(low+high)/2;
    int leftmax =Solution::find_maximum_subarray(A, low, mid);
    int rightmax =Solution::find_maximum_subarray(A, mid+1, high);
    int crossingmax =Solution::find_maximum_crossing_subarray(A, low, mid, high);
    return max(max(leftmax,rightmax),crossingmax);
}
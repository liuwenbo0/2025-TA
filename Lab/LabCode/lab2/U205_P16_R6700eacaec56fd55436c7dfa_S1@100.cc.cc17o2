#include "Solution.h"
int mymax(int a,int b) {return a>b?a:b;}
int Solution::find_maximum_crossing_subarray(vector<int> &A, int low, int mid, int high) {
    // 请在这里完成你的代码
	int maxLeft=0,sumLeft=0;
	for(int i=mid;i>=low;i--)
	{
		sumLeft+=A[i];
		maxLeft=mymax(maxLeft,sumLeft);
	}
	int maxRight=0,sumRight=0;
	for(int i=mid+1;i<=high;i++)
	{
		sumRight+=A[i];
		maxRight=mymax(maxRight,sumRight);
	}
    return maxLeft+maxRight;
}
int Solution::find_maximum_subarray(vector<int> &A, int low, int high) {
    // 请在这里完成你的代码
	if(low==high) return mymax(A[low],0);
    int mid=(low+high)/2;
    int maxLeft=find_maximum_subarray(A,low,mid);
    int maxRight=find_maximum_subarray(A,mid+1,high);
    int maxCross=find_maximum_crossing_subarray(A,low,mid,high);
    int ret=mymax(maxLeft,maxRight);
    ret=mymax(ret,maxCross);
    return ret;
}
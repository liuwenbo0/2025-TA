#include "Solution.h"
int Solution::find_maximum_crossing_subarray(vector<int> &A, int low, int mid, int high) {
    // 请在这里完成你的代码

    int i,j;
    int lm = -100 , rm = -100;
    int ans = 0;
    for(i = mid;i >= low;i--)
    {
        ans+=A[i];
        if(ans > lm) lm = ans;
    }
    ans = 0;
    for(j = mid+1;j <= high;j++)
    {
        ans += A[j];
        if(ans > rm) rm = ans;
    }
    

    return lm+rm;
}
int Solution::find_maximum_subarray(vector<int> &A, int low, int high) {
    // 请在这里完成你的代码
    int mid,lm,rm,cm;
    if(low == high) return A[high];
    else
    {
        mid=(high + low)/2;
        lm = Solution::find_maximum_subarray(A , low , mid);
        rm = Solution::find_maximum_subarray(A , mid+1 , high);
        cm = Solution::find_maximum_crossing_subarray(A , low , mid , high);
        return max(max(lm,rm),cm);
    }
    
    
}
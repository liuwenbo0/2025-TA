#include "Solution.h"
vector<vector<int>> Solution::round_robin_schedule(int n) {

    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    // 请在这里完成你的代码
        // 判断 n 是否为 2 的幂
        if (n <= 0 || (n & (n - 1)) != 0) {
            return {};
        }

        if (n == 2) {
            return {
                {1, 2},
                {2, 1}
            };
        }

        int half = n / 2;
        std::vector<std::vector<int>> sub_ans = round_robin_schedule(half);


        // 填充子数组
        for (int i = 0; i < half; i++) {
            for (int j = 0; j < half; j++) {
                ans[i][j] = sub_ans[i][j];
                ans[i + half][j + half] = sub_ans[i][j];
            }
        }
        for (int i = 0; i < half; i++) {
            for (int j = 0; j < half; j++) {
                ans[i][j + half] = sub_ans[i][j] + half;
                ans[i + half][j] = sub_ans[i][j] + half;
            }
        }

        return ans;
    }
#include <iostream>  
#include <vector>  
#include <queue>  

using namespace std;  


vector<int> splitCrystal(long long m) { 
    vector<int> crystals;  
    queue<long long> q; 
    q.push(m); 

    while (!q.empty()) {  
        long long current = q.front();  
        q.pop();  

        if (current > 1) {  
            long long part1 = current / 2;  
            long long part2 = current % 2;  
            long long part3 = current / 2;  
            q.push(part1);  
            q.push(part2);  
            q.push(part3);  
        } else {  

            crystals.push_back(current);  
        }  
    }  
    
    return crystals;  
}  

int countOnes(const vector<int>& crystals, int k, int s) {  
    int count = 0;  
    for (int i = k - 1; i <= s - 1 && i < crystals.size(); ++i) {  
        if (crystals[i] == 1) {  
            count++;  
        }  
    }  
    return count;  
}  

int main() {  
    long long m;  
    int k, s;  
    cin >> m >> k >> s;  
    vector<int> crystals = splitCrystal(m);   
    int result = countOnes(crystals, k, s);      
    cout << result << endl;  

    return 0;  
}
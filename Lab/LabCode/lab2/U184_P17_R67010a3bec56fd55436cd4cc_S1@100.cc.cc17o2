#include "Solution.h"
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    if(n<=0||(n&(n-1))!=0){
        return {};
    }
    if (n == 2) {
        return {
            {1, 2},
            {2, 1}
        };
    }
    int m=n/2;  
    vector<vector<int>> left_up=round_robin_schedule(m);
    for(int i=0;i<m;i++){  
        for(int j=0;j<m;j++){  
            ans[i][j]=left_up[i][j];  
        }  
    }       
    for(int i=0;i<m;i++){  
        for(int j=m;j<n;j++){  
            ans[i][j]=left_up[i][j-m]+m;  
        }  
    }
    for(int i=m;i<n;i++){  
        for(int j=0;j<m;j++){  
            ans[i][j]=left_up[j][i-m]+m;  
        }  
    } 
    for(int i=m;i<n;i++){  
        for(int j=m;j<n;j++){  
            ans[i][j]=left_up[i-m][j-m];
        }  
    }
      
    return ans;
}
#include <iostream>

using namespace std;

const int maxn=2e6+8;
int c;
long long ans1,ans2,ans3;
int a[maxn];

void dfs(int s,int sum,int step){
    int l=s*2,r=s*2+1;
    int flag=0,flag2=0;
    if(l<=c){
        if(a[l]!=-1){
            dfs(l,sum+a[l],step+1);
        }
    }else{
        flag=1;
    }

    if(r<=c){
        if(a[r]!=-1){
            dfs(r,sum+a[r],step+1);
        }
    }else{
        flag2=1;
    }

    if(flag==0||flag2==0){
        if(a[s]>a[l]&&a[s]>a[r]){
                if(a[l]!=-1||a[r]!=-1){
                    ans3+=a[s];
                }
        }
    }else{
        if(ans2<sum){
            ans2=sum;
        }

        if(ans1<step){
            ans1=step;
        }
    }
}

int main()
{
    c=1;
    while(cin>>a[c]){
        c++;
    }
    c--;
    dfs(1,a[1],1);
    cout<<ans1<<'\n'<<ans2<<'\n'<<ans3;
    return 0;
}
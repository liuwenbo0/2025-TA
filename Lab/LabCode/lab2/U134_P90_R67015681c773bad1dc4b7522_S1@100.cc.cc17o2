#include <iostream>
using namespace std;

int h(int t[], int r, int n) {
    int lh, rh;
    if (t[r] == -1 || r >= n) return 0;
    else {
        lh = h(t, r * 2 + 1, n);
        rh = h(t, r * 2 + 2, n);
        return (lh >= rh) ? lh + 1 : rh + 1;
    }
}

int m(int t[], int r, int n) {
    int ln = 0, rn = 0;
    if (t[r] == -1 || r >= n) return 0;
    else {
        ln += m(t, r * 2 + 1, n);
        rn += m(t, r * 2 + 2, n);
        return (rn >= ln) ? rn + t[r] : ln + t[r];
    }
}

int f(int t[], int r, int n) {
    if (t[r] == -1 || r >= n) return 0;
    else if (t[r * 2 + 1] == -1 && t[r * 2 + 2] == -1) return 0;
    else if ((r * 2 + 1) >= n && (r * 2 + 2) >= n) return 0;
    else if (t[r] > t[r * 2 + 1] && t[r] > t[r * 2 + 2]) 
        return t[r] + f(t, r * 2 + 1, n) + f(t, r * 2 + 2, n);
    else 
        return f(t, r * 2 + 1, n) + f(t, r * 2 + 2, n);
}

int main() {
    int num, i = 0;
    int t[10000000];
    while (cin >> num) {
        t[i++] = num;
    }
    cout << h(t, 0, i) << endl;
    cout << m(t, 0, i) << endl;
    cout << f(t, 0, i);
    return 0;
}
#include "Solution.h"
#include<math.h>
int Solution::find_maximum_crossing_subarray(vector<int> &A, int low, int mid, int high) {
    int left_sum=-INFINITY,right_sum=-INFINITY,sum=0;
    for(int i=mid;i>=low;i--)
    {
       sum=sum+A[i];
       if(sum>left_sum)
       {
        left_sum=sum;
       } 
    }
    sum=0;
     for(int j=mid+1;j<=high;j++)
    {
       sum=sum+A[j];
       if(sum>right_sum)
       {
        right_sum=sum;
       } 
    }
return right_sum+left_sum;
}
int Solution::find_maximum_subarray(vector<int> &A, int low, int high) {
   int left_sum=-INFINITY,right_sum=-INFINITY,cross_sum=-INFINITY;
    if(high==low)
    {
        return A[low];
    }
    else
    {
       int  mid=(low+high)/2;
    left_sum=Solution::find_maximum_subarray(A,low,mid) ;
    right_sum=Solution::find_maximum_subarray(A,mid+1,high) ;
    cross_sum=Solution::find_maximum_crossing_subarray(A,low,mid,high);
    if((left_sum>=right_sum)&&(left_sum>=cross_sum)) return left_sum;
    else if((right_sum>=left_sum)&&(right_sum>=cross_sum)) return right_sum;
    else return cross_sum;
    
    }}
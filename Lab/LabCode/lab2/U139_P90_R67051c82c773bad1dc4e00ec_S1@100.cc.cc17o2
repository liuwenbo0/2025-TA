#include <bits/stdc++.h>
using namespace std;

const int SIZE = 2000005;
int values[SIZE], temp[SIZE];
int elementCount = 0;
int totalValue;
int resultValue;
int heightValue;

int recursiveFunction(int index, int limit) {
    if (index > limit) return 0;
    temp[index] = values[index] + max(recursiveFunction(index * 2 + 1, limit), recursiveFunction(index * 2 + 2, limit));
    if (temp[index] < 0) return 0;
    return temp[index];
}

int main() {
    while (cin >> values[elementCount]) {
        elementCount++;
    }
    totalValue = elementCount;

    while (totalValue > 0) {
        totalValue /= 2;
        heightValue++;
    }

    int flag = 1;
    for (int i = elementCount / 2; i < elementCount; i++) {
        if (values[i]!= -1) {
            flag = 0;
            break;
        }
    }
    heightValue -= flag;
    cout << heightValue << endl;

    cout << recursiveFunction(0, elementCount - 1) << endl;
    totalValue = 1;
    while (--heightValue > 0) totalValue *= 2;

    for (int i = 0; i <= totalValue * 2 - 1; i++) {
        if (values[i] == 0) values[i] = -1;
    }

    totalValue--;
    for (int i = 0; i < totalValue; i++) {
        if ((values[i * 2 + 1]!= -1) || (values[i * 2 + 2]!= -1)) {
            if (values[i] > max(values[i * 2 + 1], values[i * 2 + 2]))
                resultValue += values[i];
        }
    }

    cout << resultValue << endl;
    return 0;
}
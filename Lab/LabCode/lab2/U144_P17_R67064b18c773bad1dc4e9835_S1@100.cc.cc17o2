#include "Solution.h"
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    int sum=0;
    int low=1;
    int high=n;
    while(1){
    	high=high/2; 
        if(high==0) break;
        sum++;
    }
    for(int C=0;C<n;C++){
    	ans[C][0]=C+1;
    	ans[0][C]=C+1;
	}
    for(int i=1;i<=sum;i++){
    	int j,l;
        low*=2;
        for(j=low/2;j<low;j++){
            for(l=low/2;l<low;l++){
                ans[j][l]=ans[j-low/2][l-low/2];
            }
        }
        if(low==2) continue;
        for(j=1;j<low/2;j++){
            for(l=low/2;l<low;l++){
                ans[j][l]=ans[j][l-low/2]+low/2;
            }
        }
        for(j=low/2;j<low;j++){
            for(l=1;l<low/2;l++){
                ans[j][l]=ans[j-low/2][l]+low/2;
            }
        }
    }

    return ans;
  }
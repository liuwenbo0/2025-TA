#include "Solution.h"
#include<functional>
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
    // 请在这里完成你的代码   
    int half = n/2;
    if (n == 2) {
        ans[0][0] =1;
        ans[0][1] =2;
        ans[1][0] =2;
        ans[1][1] =1;
        return ans;
    }
    vector<vector<int>> schedule = round_robin_schedule(half);

    for (int i = 0; i < half; i++) {
        for (int j = 0; j < half; j++) {
            ans[i][j] = schedule[i][j];
            ans[i + half][j + half] = schedule[i][j];
        }
    }
    for (int i = 0; i < half; i++) {
        for (int j = 0; j < half; j++) {
            ans[i][j + half] = schedule[i][j] + half;
            ans[i + half][j] = schedule[i][j] + half;
        }
    }
    return ans;
  }
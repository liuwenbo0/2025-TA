#include <iostream>
using namespace std;

long long compute_total(long long m) {
    if (m <= 1) return 1;
    return 2 * compute_total(m / 2) + 1;
}

long long find_ones(long long m, long long start, long long end, long long k, long long s) {
    if (m == 0) return 0;
    if (m == 1) return (start >= k && end <= s) ? 1 : 0;

    long long mid = start + (end - start) / 2;
    long long count = 0;

    if (k <= mid - 1 && s >= start) {
        count += find_ones(m / 2, start, mid - 1, k, s);
    }

    if (mid >= k && mid <= s && m % 2 == 1) {
        count += 1;
    }

    if (k <= end && s >= mid + 1) {
        count += find_ones(m / 2, mid + 1, end, k, s);
    }

    return count;
}

int main() {
    long long m, k, s;
    cin >> m >> k >> s;
    long long total_length = compute_total(m);
    long long result = find_ones(m, 1, total_length, k, s);
    cout << result << endl;
    return 0;
}
#include "Solution.h"
#include<vector>
#include<limits.h>
int Solution::find_maximum_crossing_subarray(vector<int> &A, int low, int mid, int high) {
    // 请在这里完成你的代码
     int sum=0,maxsuml=INT_MIN,maxsumr=INT_MIN;
     int i=0,j=0;
     for(i=mid;i>=low;i--){
        sum+=A[i];
        if(sum>maxsuml) {
            maxsuml=sum;
        }
     }
     sum=0;
     for(j=mid+1;j<=high;j++){
        sum+=A[j];
        if(sum>maxsumr){
            maxsumr=sum;
        }
     }

    return maxsuml+maxsumr;
}
int Solution::find_maximum_subarray(vector<int> &A, int low, int high) {
    // 请在这里完成你的代码
    if(high==low) return A[low];
   else{
        int mid=(high+low)/2;
        int leftmax=find_maximum_subarray(A,low,mid);
        int rightmax=find_maximum_subarray(A,mid+1,high);
        int crossmax=find_maximum_crossing_subarray(A,low,mid,high);
        if(leftmax>rightmax){
            if(leftmax>crossmax) return leftmax;
            else return crossmax;
        }
        else if(rightmax>crossmax) return rightmax;
        else return crossmax;
   }
}
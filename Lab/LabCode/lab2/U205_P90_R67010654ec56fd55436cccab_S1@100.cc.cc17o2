#include<cstdio>
#include<cstring>
#include<iostream>
using namespace std;
const int N=4050000;
int tree[N],num,ans1,ans2;
long long ans3;
void solveQ1(int now,int sum)
{
	if(tree[now]==-1 || now>num)
	{
		ans1=max(ans1,sum-1);
		return ;
	}
	int l=now*2;
	int r=l+1;
	solveQ1(l,sum+1);
	solveQ1(r,sum+1);
}
void solveQ2(int now,int sum)
{
	if(tree[now]==-1 || now>num)
	{
		ans2=max(ans2,sum);
		return ;
	}
	int l=now*2;
	int r=l+1;
	solveQ2(l,sum+tree[now]);
	solveQ2(r,sum+tree[now]);
}
void solveQ3(int now)
{
	if(tree[now]==-1 || now>num) return ;
	int l=now*2;
	int r=l+1;
	if((tree[l]!=-1 && l<=num) || (tree[r]!=-1 && r<=num))
			if((tree[now]>tree[l] || tree[l]==-1) && (tree[now]>tree[r] || tree[r]==-1)) ans3+=1ll*tree[now];
	solveQ3(l);
	solveQ3(r);
}
int main()
{
	int read;
	while(scanf("%d",&read)!=EOF) {tree[++num]=read;}
	ans1=0;
	solveQ1(1,1);
	printf("%d\n",ans1);
//	for(int i=1;i<=num;i++) cout<<tree[i]<<" ";
	ans2=-0x7fffffff;
	solveQ2(1,0);
	printf("%d\n",ans2);
	ans3=0;
	solveQ3(1);
	printf("%lld\n",ans3);
	return 0;
}
#include "Solution.h"
#include <vector>
#include <algorithm> 
#include <climits>
using namespace std;
int Solution::find_maximum_crossing_subarray(vector<int> &A, int low, int mid, int high) {
    int lm=-10000,rm=-10000;
    int t=0;
    //从中间向左遍历找左最大和
    for(int i=mid;i>=low;i--){
        t+=A[i];
        if(t>lm){
            lm=t;
        }
    }
    t=0;
    //向右
    for(int i=mid+1;i<=high;i++) {
        t+=A[i];
        if(t>rm) {
            rm=t;
        }
    }
    return rm+lm;
}
int Solution::find_maximum_subarray(vector<int> &A, int low, int high) {
    if (high==low){
        return A[low];
    }
    int mid=(low+high)/2;
    int lm=Solution::find_maximum_subarray(A, low, mid);
    int rm=Solution::find_maximum_subarray(A, mid+1, high);
    int cm=Solution::find_maximum_crossing_subarray(A, low, mid, high);
    return max(max(lm,rm),cm);
}
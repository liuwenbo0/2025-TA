#include "Solution.h"
#include<vector>
#include<algorithm>
#include<climits>
using namespace std;
int Solution::find_maximum_crossing_subarray(vector<int> &A, int low, int mid, int high) {
    // 请在这里完成你的代码
    int left_sum=-10000,sum=0,right_sum=-10000;
    for(int i=mid;i>=low;i--)
    {
        sum+=A[i];
        if(sum>left_sum)
        {
            left_sum=sum;
        }
    }
    sum=0;
    for(int i=mid+1;i<=high;i++)
    {
        sum+=A[i];
        if(sum>right_sum)
        {
            right_sum=sum;
        }
    }
    return left_sum+right_sum;
}
int Solution::find_maximum_subarray(vector<int> &A, int low, int high) {
    // 请在这里完成你的代码
    if(high==low)
        return A[low];
    int mid=(low+high)/2;
    int left_sum,right_sum,cross_sum;
    left_sum=find_maximum_subarray(A,low,mid);
    right_sum=find_maximum_subarray(A,mid+1,high);
    cross_sum=find_maximum_crossing_subarray(A,low,mid,high);
    return max(max(left_sum,right_sum),cross_sum);
    
}
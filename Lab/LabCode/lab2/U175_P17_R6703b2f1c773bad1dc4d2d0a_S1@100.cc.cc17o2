#include "Solution.h"
 void dc(vector<vector<int> >&ans,int lie,int len){
		if(len==1){
			ans[0][lie]=lie+1;
			return;
		}
		dc(ans,lie,len/2);
		dc(ans,lie+len/2,len/2);
		for(int i=0;i<len/2;i++){
			for(int j=0;j<len/2;j++){
				ans[len/2+i][lie+j]=ans[i][lie+len/2+j];
				ans[len/2+i][lie+len/2+j]=ans[i][lie+j];
			}
		}
	}
vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));
    }
   
    dc(ans,0,n);
    return ans;
  }
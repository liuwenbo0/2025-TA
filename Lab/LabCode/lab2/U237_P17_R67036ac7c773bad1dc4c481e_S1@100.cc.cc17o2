#include "Solution.h"


void  solve(vector<vector<int>>&ans, int n){
    if (n==1){
        ans[0][0]=1;
        return; }
        
    int m=n/2;
    
    solve(ans,m);//递归至2*2表
        
    for (int i = 0; i < m; i++) {
         for (int j = m; j < n; j++) {
            ans[i][j] = ans[i][j - m] + m;}}//补充右上角
        
    for( int j =0 ;j<m  ; j++ ){
        for (int i =m ; i< n ; i++){
            ans[i][j]= ans[i - m][j]  + m;}}//补充左下角
            
    for ( int i = m; i < n ; i++){
        for ( int j =m ;j<n ; j++){
            ans[i][j]= ans[i-m][j-m];}}//补充右下角
    return;}


vector<vector<int>> Solution::round_robin_schedule(int n) {
    // 如此构造一个二维数组（ nxn 矩阵）
    vector<vector<int> > ans;
    for(int i=0; i<n; i++) {
      ans.push_back(vector<int>(n, 0));}
    
    solve(ans,n);
   

    return ans;
  }
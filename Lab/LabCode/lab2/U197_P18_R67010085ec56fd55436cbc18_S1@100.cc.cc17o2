#include "Solution.h"

void my_perfect_permutation(std::vector<int>& orig)
{
    if (orig.size() <= 2)
        return;
    std::vector<int> left, right;
    for (int i = 0; i < orig.size(); i += 2)
        left.push_back(orig[i]);
    for (int j = 1; j < orig.size(); j += 2)
        right.push_back(orig[j]);
    my_perfect_permutation(left);
    my_perfect_permutation(right);
    for (int i = 0; i < left.size(); i++)
        orig[i] = left[i];
    for (int i = 0; i < right.size(); i++)
        orig[i + left.size()] = right[i];
}

vector<int> Solution::perfect_permutation(int n)
{
    vector<int> ans;
    for (int i = 1; i <= n; i++)
        ans.push_back(i);
    my_perfect_permutation(ans);
    return ans;
}
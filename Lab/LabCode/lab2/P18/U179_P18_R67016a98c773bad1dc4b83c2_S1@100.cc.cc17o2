#include "Solution.h"

vector<int> Solution::perfect_permutation(int n) {
    vector<int> ans;
    // 请在这里完成你的代码
    
    if (n == 1) {
        ans.push_back(1);
        return ans;
    }
    if (n == 2) {
        ans.push_back(1);
        ans.push_back(2);
        return ans;
    }
    
    if (n % 2 == 1 && n!=1) {
        // 递归调用，并接收返回值
        vector<int> left = perfect_permutation((n+1)/2);
        vector<int> right = perfect_permutation((n-1)/2);
        // 设置 ans 的大小
        ans.resize(n);
        // 将返回值添加到 ans 中
        for(int i=0;i<(n+1)/2;i++){
            ans[i]=2*left[i]-1;
        }
        for(int i=0;i<(n-1)/2;i++){
            ans[i+(n+1)/2]=2*right[i];
        }
        return ans;
    }
    // n 为偶数
    if(n%2==0){
        // 递归调用，并接收返回值
        vector<int> left = perfect_permutation(n/2);
        vector<int> right = perfect_permutation(n/2);
        // 设置 ans 的大小
        ans.resize(n);
        // 将返回值添加到 ans 中
        for(int i=0;i<n/2;i++){
            ans[i]=2*left[i]-1;
        }
        for(int i=0;i<n/2;i++){
            ans[i+n/2]=2*right[i];
        }
        return ans;
    }
    
   
}
#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <queue>
#include <climits>

using namespace std;

int main() {
    int n, q;
    cin >> n >> q;

    vector<int> h(n);
    for (int i = 0; i < n; ++i) {
        cin >> h[i];
    }

    unordered_map<int, vector<int>> m;

    for (int x : h) {
        int ch = x;
        int c = 0;

        while (ch > 0) {
            m[ch].push_back(c);
            ch /= 2;
            c++;
        }
    }

    int minCuts = INT_MAX;

    for (const auto& p : m) {
        const auto& v = p.second;

        if (static_cast<int>(v.size()) >= q) {
            priority_queue<int, vector<int>, greater<int>> pq(v.begin(), v.end());
            int total = 0;

            for (int i = 0; i < q; ++i) {
                total += pq.top();
                pq.pop();
            }

            minCuts = min(minCuts, total);
        }
    }

    cout << (minCuts == INT_MAX ? 0 : minCuts) << endl;

    return 0;
}
#include "QuickSort.h"
#include <cstdlib>
int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    int randomIndex = rand() % (q - p + 1) + p;
    swap(nums[p], nums[randomIndex]);
    int x=nums[p];
    int i=p;
    for(int j=p+1;j<=q;j++){
        if(nums[j]<=x){
            i++;
            std::swap(nums[i],nums[j]);
        }
    }
    std::swap(nums[p],nums[i]);
    return i;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    if(l<r){
        int q=partition(nums,l,r);
        quick_sort(nums,l,q-1);
        quick_sort(nums,q+1,r);
    }

}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
#include "HeapSort.h"
#include <algorithm>

void HeapSort::max_heapify(std::vector<int>& nums, int i) {
    int l = 2 * i + 1; 
    int r = 2 * i + 2;
    int largest = i;

    if (l < heap_size && nums[l] > nums[largest]) {
        largest = l;
    }
    if (r < heap_size && nums[r] > nums[largest]) {
        largest = r;
    }
    if (largest != i) {
        std::swap(nums[i], nums[largest]);
        max_heapify(nums, largest);
    }
}

void HeapSort::build_max_heap(std::vector<int>& nums) {
    heap_size = nums.size(); 
    for (int i = heap_size / 2 - 1; i >= 0; --i) { 
        max_heapify(nums, i);
    }
}

void HeapSort::mysort(std::vector<int>& nums) {
    heap_size = nums.size(); 
    build_max_heap(nums);

    for (int i = heap_size - 1; i > 0; --i) {
        std::swap(nums[0], nums[i]); 
        heap_size--; 
        max_heapify(nums, 0); 
    }
}
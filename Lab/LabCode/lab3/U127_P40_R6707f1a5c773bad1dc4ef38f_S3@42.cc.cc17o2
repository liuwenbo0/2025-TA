#include <iostream>
#include <vector>
#include "limits.h"
using namespace std;

void three_way_quick_sort(vector<int>& nums, int p, int q) {
    if(p<q){
        int s=rand()%(q-p+1)+p;
        swap(nums[s],nums[q]);
        int x=nums[q];
        int i=p-1;
        int j=q;
        for(int k=p;k<j;k++){
            if(nums[k]==x){
                j--;
                swap(nums[j],nums[k]);
            }
            if(nums[k]<x){
                i++;
                swap(nums[i],nums[k]);
            }
        }
        int m=i;
        for(int k=j;k<=q;k++){
            m++;
            swap(nums[m],nums[k]);
        }
        three_way_quick_sort(nums,p,i);
        three_way_quick_sort(nums,m+1,q);
    }

}
void mysort(vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    three_way_quick_sort(nums, 0, nums.size() - 1);
}




int cut(vector<int>vec,int n,int q){
    int max=0;
    int min=INT_MAX;
    int time=0;

    for(int i=0;i<n;i++){
        if( vec[i]>max){
            max=vec[i];
        }
    }//最大值
    for(int i=1;i<=max;i++){
        int length=0;
        vector<int> nums;
        for(int j=0;j<n;j++){
            int x=vec[j];
            //cout << endl<<x<<' ';
            if(i==x){
                nums.push_back(0);
                length++;
                //cout << 0<<x<<' ';
            }
            else{
                time=0;
                while(x!=i){
                    x/=2;
                    time++;
                    if(x<i)
                    break;
                }
                if(x==i){
                    nums.push_back(time);
                    //cout << time<<vec[j]<<' ';
                    length++;
                }
            }
        }
        if(length>=q){
            mysort(nums);//排序
            int sum=0;
            for(int i=0;i<q;i++){
                sum+=nums[i];
            }//求和
            if(sum<min){
                min=sum;
            }
            //cout << sum<<endl;
        }
        
    }
    return min;
}

int main() {
    int n,q;
    cin >> n>>q;
    vector<int> vec;
    int x;
    while(!cin.eof()){
        cin >> x;
        vec.push_back(x);
    }
    int min=cut(vec,n,q);
    cout << min;
}
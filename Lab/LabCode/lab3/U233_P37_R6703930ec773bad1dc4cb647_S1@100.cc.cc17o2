#include "HeapSort.h"
void HeapSort::max_heapify(std::vector<int>& nums, int i) {
    // 请在这里完成你的代码
    int l = 2 * i, r = 2 * i + 1, largest = i;
    if (l <= heap_size && nums[l] > nums[largest]) largest = l;
    if (r <= heap_size && nums[r] > nums[largest]) largest = r;
    if(largest != i){
        swap(nums[largest], nums[i]);
        max_heapify(nums, largest);
    }
}
void HeapSort::build_max_heap(std::vector<int>& nums) {
    // 请在这里完成你的代码
    heap_size = length;
    for(int i = length/2; i > 0; i--){
        max_heapify(nums, i);
    }
}
void HeapSort::mysort(std::vector<int>& nums) {
    length = nums.size();
    nums.insert(nums.begin(), 0); // 在开头插入一个元素，使得待排序元素下标从 1 开始
    // 请在这里完成你的代码
    heap_size = length;
    build_max_heap(nums);
    for(int i = length; i > 1; i--){
        swap(nums[i], nums[1]);
        heap_size--; 
        max_heapify(nums, 1);
    }
    nums.erase(nums.begin()); // 删除开头元素
}
#include "QuickSort.h"

int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
    swap(nums[q],nums[rand()%(q-p+1)+p]);
	int t=nums[q];
	int i=p-1,j;
	for(j=p;j<q;j++){
		if(nums[j]<t){
			i++;
			int s=nums[j];
			nums[j]=nums[i];
			nums[i]=s;
		}
	}
	int x=nums[i+1];
	nums[i+1]=nums[q];
	nums[q]=x;
    return i+1;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    // 请在这里完成你的代码
	if(l<r){
		int x=QuickSort::partition(nums,l,r);
		QuickSort::quick_sort(nums,l,x-1);
		QuickSort::quick_sort(nums,x+1,r);
	}
	else return;
}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
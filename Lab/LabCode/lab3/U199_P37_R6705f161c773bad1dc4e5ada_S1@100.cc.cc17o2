#include "HeapSort.h"

void HeapSort::max_heapify(std::vector<int>& nums, int i) 
{
    int m,l=i*2,r=i*2+1,a;
    if(l<=heap_size&&nums[i]<nums[l])m=l;
    else m = i;
    if(r<=heap_size&&nums[m]<nums[r])m=r;
    if(m-i)
    {
    a=nums[i];
    nums[i]=nums[m];
    nums[m]=a;
    max_heapify(nums,m);
    }
}

void HeapSort::build_max_heap(std::vector<int>& nums) 
{
    int i;
    for(i=heap_size/2;i>=1;i--)
    {
    max_heapify(nums,i);
    }
}

void HeapSort::mysort(std::vector<int>&nums) 
{
    int b,j;
    nums.insert(nums.begin(),0); 
    heap_size=nums.size()-1;
    build_max_heap(nums);
    for(j=heap_size;j>=2;j--) 
    {
    b=nums[1];
    nums[1]=nums[j];
    nums[j]=b;
    heap_size--;
    max_heapify(nums, 1);
    }
    nums.erase(nums.begin());
}
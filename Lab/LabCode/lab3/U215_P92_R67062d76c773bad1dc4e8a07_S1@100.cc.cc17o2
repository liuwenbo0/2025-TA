#include <iostream>
#include <deque>
#include <vector>

using namespace std;

void findMaxInSlidingWindow(const vector<int>& nums, int k) {
    deque<int> dq;
    vector<int> result;
    int n = nums.size();

    for (int i = 0; i < n; ++i) {
        if (!dq.empty() && dq.front() <= i - k) {
            dq.pop_front();
        }

        while (!dq.empty() && nums[dq.back()] <= nums[i]) {
            dq.pop_back();
        }

        dq.push_back(i);

        if (i >= k - 1) {
            result.push_back(nums[dq.front()]);
        }
    }

    for (size_t i = 0; i < result.size(); ++i) {
        if (i > 0) cout << " ";
        cout << result[i];
    }
    cout << endl;
}

int main() {
    int n, k;
    cin >> n >> k;

    vector<int> nums(n);
    for (int i = 0; i < n; ++i) {
        cin >> nums[i];
    }

    findMaxInSlidingWindow(nums, k);

    return 0;
}
#include "HeapSort.h"
void HeapSort::max_heapify(std::vector<int>& nums, int i) {
    // 请在这里完成你的代码

    
    int l=i*2;
    int r=i*2+1;
    int lar;
    if(l<=heap_size&&nums[l]>nums[i]){
        lar=l;

    }else{
        lar=i;
    }
    if(r<=heap_size&&nums[r]>nums[lar]){
        lar=r;
    }
    if(lar!=i){
        std::swap(nums[i],nums[lar]);
        max_heapify(nums,lar);
        return;
    }
return;

}
void HeapSort::build_max_heap(std::vector<int>& nums) {
    // 请在这里完成你的代码

    
    
    for(int i=nums.size()/2;i>0;i--){
        max_heapify(nums,i);

    }

}
void HeapSort::mysort(std::vector<int>& nums) {
    heap_size=length = nums.size();
    nums.insert(nums.begin(), 0); // 在开头插入一个元素，使得待排序元素下标从 1 开始
    // 请在这里完成你的代码
    build_max_heap(nums);
    for(int i=length;i>1;i--){
        std::swap(nums[i],nums[1]);
        heap_size-=1;
        max_heapify(nums,1);
    }

    nums.erase(nums.begin()); // 删除开头元素
}
#include "HeapSort.h"

void HeapSort::max_heapify(std::vector<int>& nums, int i) {
    // 请在这里完成你的代码

    int left = 2 * i + 1;
    int right = 2 * i + 2;
    int largest = i;

    if (left < heap_size && nums[left] > nums[largest]) {
        largest = left;
    }

    if (right < heap_size && nums[right] > nums[largest]) {
        largest = right;
    }

    if (largest != i) {
        std::swap(nums[i], nums[largest]);
        max_heapify(nums, largest);// 在开头插入一个元素，使得待排序元素下标从 1 开始
    }
}

void HeapSort::build_max_heap(std::vector<int>& nums) {
     // 请在这里完成你的代码
     for (int i = heap_size / 2 - 1; i >= 0; --i) {
        max_heapify(nums, i);
    }
}

void HeapSort::mysort(std::vector<int>& nums) {
    heap_size = nums.size();
    build_max_heap(nums);

    for (int i = heap_size - 1; i > 0; --i) {
        std::swap(nums[0], nums[i]);
        heap_size--;
        max_heapify(nums, 0);
    }
}
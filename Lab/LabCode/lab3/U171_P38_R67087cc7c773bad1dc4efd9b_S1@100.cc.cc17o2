#include "QuickSort.h"
#include <random>

int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
    std::random_device rd;  
    std::mt19937 gen(rd()); 
    std::uniform_int_distribution<> dis(p, q);
    int y=dis(gen);
    swap(nums[y],nums[q]);
    int x=nums[q];
    int i=p-1;
    for(int j=p;j<=q-1;j++)
    {
        if(nums[j]<=x)
        {
            i++;
            swap(nums[i],nums[j]);
        }
    }
    swap(nums[i+1],nums[q]);
    return i+1;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    // 请在这里完成你的代码
    if(l>=r)
        return;
    int p=partition(nums,l,r);
    quick_sort(nums,l,p-1);
    quick_sort(nums,p+1,r);
}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
    }
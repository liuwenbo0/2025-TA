#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <climits>

using namespace std;

int minCuts(const vector<int>& heights, int q) {
    unordered_map<int, vector<int>> p; 

  
    for (int height : heights) {
        int curh = height;
        int cuts = 0;

        while (curh > 0) {
            p[curh].push_back(cuts);
            curh /= 2; 
            cuts++; 
        }
    }

    int result = INT_MAX; 

    for (auto pair : p) {
        vector<int> cuts = pair.second;

       
        if (cuts.size() >= q) {
            sort(cuts.begin(), cuts.end()); 
            int totalCuts = 0;

        
            for (int i = 0; i < q; ++i) {
                totalCuts += cuts[i];
            }

            result = min(result, totalCuts);
        }
    }

    return result; 
}

int main() {
    int n, q;
    cin >> n >> q;

    vector<int> heights(n);
    for (int i = 0; i < n; i++) {
        cin >> heights[i];
    }

    int result = minCuts(heights, q);
    cout << result << endl;

    return 0;
}
#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <climits>

using namespace std;

int main() {
    int n, q;
    cin >> n >> q;
    vector<int> heights(n);
    
    for (int i = 0; i < n; ++i) {
        cin >> heights[i];
    }

    map<int, vector<int>> heightCuts; // 记录每个高度能达到的所有高度及对应的修剪次数

    // 处理每段高度
    for (int h : heights) {
        int currentHeight = h;
        int cuts = 0;
        
        // 不断将当前高度减半直到为零
        while (currentHeight > 0) {
            heightCuts[currentHeight].push_back(cuts);
            currentHeight /= 2;
            cuts++;
        }
    }

    int minCuts = INT_MAX;

    // 检查每个高度的修剪次数
    for (const auto& entry : heightCuts) {
        const auto& cutCounts = entry.second;
        int size = cutCounts.size();
        
        if (size >= q) {
            // 只考虑前 q 个最小的修剪次数
            vector<int> temp(cutCounts);
            sort(temp.begin(), temp.end());
            
            int totalCuts = 0;
            for (int i = 0; i < q; ++i) {
                totalCuts += temp[i];
            }
            
            minCuts = min(minCuts, totalCuts);
        }
    }

    cout << minCuts << endl;
    return 0;
}
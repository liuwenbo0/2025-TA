#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <queue>
using namespace std;

#define int long long

int solve(vector<int>& height, int q) {
    unordered_map<int, vector<int>> heights;
    for (int h : height) {
        int cur = h;
        int cuts = 0;
        while (cur > 0) {
            heights[cur].push_back(cuts);
            cur = cur/2;
            cuts++;
        }
    }

    int min1 = 3000000;
    for (auto& entry : heights) {
        vector<int>& cuts2 = entry.second;
        if (cuts2.size() < q) continue;

        sort(cuts2.begin(), cuts2.end());
        int total = 0;
        for (int i = 0; i < q; ++i) {
            total += cuts2[i];
        }
        min1 = min(min1, total);
    }
    return min1;
}

signed main() {
    int n, q;
    cin >> n >> q;
    vector<int> heights(n);
    for (int i = 0; i < n; ++i) {
        cin >> heights[i];
    }

    cout << solve(heights, q) << endl;
    return 0;
}
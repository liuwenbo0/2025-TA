#include "ThreeWayQuickSort.h"
#include <random>

void ThreeWayQuickSort::three_way_quick_sort(std::vector<int>& nums, int p, int q) {
    if (p >= q) return;  // 基本情况

    // 随机选择基准元素
    std::random_device rd;
    std::mt19937 gen(rd());
    std::uniform_int_distribution<> dis(p, q);
    int random_index = dis(gen);
    std::swap(nums[p], nums[random_index]);

    int pivot = nums[p];
    int lt = p;
    int gt = q;
    int i = p + 1;

    while (i <= gt) {
        if (nums[i] < pivot) {
            std::swap(nums[i++], nums[lt++]);
        } else if (nums[i] > pivot) {
            std::swap(nums[i], nums[gt--]);
        } else {
            i++;
        }
    }

    three_way_quick_sort(nums, p, lt - 1);
    three_way_quick_sort(nums, gt + 1, q);
}

void ThreeWayQuickSort::mysort(std::vector<int>& nums) {
    if (nums.size() == 0) 
        return;
    three_way_quick_sort(nums, 0, nums.size() - 1);
}
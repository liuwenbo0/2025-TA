#include "QuickSort.h"

int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
    int x = nums[(q+p)/2];
    nums[(q+p)/2] = nums[q];
    nums[q] = x;

    int i = p-1;
    for(int j =p;j<=q-1;j++){
        if(nums[j]<=x){
            i = i+1;
            int t = nums[i];
            nums[i] = nums[j];
            nums[j] = t;
            
        }
    }
    int t =nums[i+1];
    nums[i+1] = nums[q];
    nums[q] = t;
    return i+1;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    // 请在这里完成你的代码
    if(l<r){
        int q = partition(nums,l,r);
        quick_sort(nums,l,q-1);
        quick_sort(nums,q+1,r);
    }

}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
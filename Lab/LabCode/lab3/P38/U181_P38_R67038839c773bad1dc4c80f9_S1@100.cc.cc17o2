#include "QuickSort.h"
#include<random>
#include<utility>

int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
    random_device rd;
    mt19937 gen(rd());
    uniform_int_distribution<> dis(p, q);
    int rand = dis(gen);
    swap(nums[q], nums[rand]);
    int x = nums[q];
    int i = p - 1;
    for(int j = p; j < q; j++){
      if(nums[j] <= x){
        i ++;
        swap(nums[i], nums[j]);
      }
    }
    swap(nums[i+1], nums[q]);
    return i+1;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    // 请在这里完成你的代码
     if(l < r){
      int m = partition(nums, l, r);
      quick_sort(nums, l, m-1);
      quick_sort(nums, m+1, r);
    }
}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
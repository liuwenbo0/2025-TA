#include "QuickSort.h"

int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    int v = nums[p];
    int i = p, j = q;
    while (i < j) {
        while (i < j && nums[j] >= v) {
            j--;
        }
        nums[i] = nums[j];
        while (i < j && nums[i] <= v) {
            i++;
        }
        nums[j] = nums[i];
    }
    nums[i] = v;
    return i;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    if (l < r) {
        int k = partition(nums, l, r);
        quick_sort(nums, l, k - 1);
        quick_sort(nums, k + 1, r);
    }
}

void QuickSort::mysort(std::vector<int>& nums) {
    if (nums.size() == 0)
        return;
    quick_sort(nums, 0, nums.size() - 1);
}
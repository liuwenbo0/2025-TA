#include "QuickSort.h"

int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    int mid=p+(q-p)/2;
    int x=nums[mid];
    swap(nums[mid],nums[q]);
    int i=p-1;
    for(int j=p;j<q;j++){
        if(nums[j]<=x){
            i++;
            swap(nums[i],nums[j]);
        }
    }
    swap(nums[q],nums[i+1]);
    return i+1;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    if(l<r){
        int q=partition(nums,l,r);
        quick_sort(nums,l,q-1);
        quick_sort(nums,q+1,r);
    }
}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
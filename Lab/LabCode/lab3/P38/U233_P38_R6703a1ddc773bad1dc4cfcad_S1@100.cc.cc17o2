#include "QuickSort.h"

int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
    int i = p + rand() % (q - p + 1), b = p; 
    swap(nums[p],nums[i]);
    for(int a = p + 1; a <= q; a++){
        if(nums[a] < nums[p]){
            b++;
            swap(nums[a], nums[b]);
        }
    }
    swap(nums[p], nums[b]);
    return b;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    // 请在这里完成你的代码
    if(l < r){
        int q = partition(nums, l, r);
        quick_sort(nums, l, q - 1);
        quick_sort(nums, q + 1, r);
    }
}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
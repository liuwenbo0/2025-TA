#include "QuickSort.h"
#include <vector>

int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    int pivot = nums[p]; // 选择第一个元素作为基准
    int i = p, j = q;
    while (i < j) {
        
        while (i < j && nums[j] >= pivot) {
            j--;
        }
        if (i < j) {
            nums[i] = nums[j];
            i++;
        }
       
        while (i < j && nums[i] <= pivot) {
            i++;
        }
        if (i < j) {
            nums[j] = nums[i];
            j--;
        }
    }
    nums[i] = pivot; 
    return i;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    if (l < r) {
        int pi = partition(nums, l, r); 
        quick_sort(nums, l, pi - 1); 
        quick_sort(nums, pi + 1, r); 
    }
}

void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
        return;
    quick_sort(nums, 0, nums.size() - 1);
}
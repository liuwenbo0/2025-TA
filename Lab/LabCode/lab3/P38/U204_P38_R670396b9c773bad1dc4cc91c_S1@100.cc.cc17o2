#include "QuickSort.h"
#include <cstdlib>
#include <random>
#include <ctime>
int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
    
    int i=p+rand()%(q-p+1);
    swap(nums[p],nums[i]);
    int x=nums[p];
    i=p;
    for(int j=p+1;j<=q;j++)
    {
        if(nums[j]<=x)
        {
            i=i+1;
            swap(nums[i],nums[j]);
        }
    }
    swap(nums[p],nums[i]);
    return i;
    
}
/*int randompar(std::vector<int>& nums,int l, int r)
{
    int i=l+rand()%(r-l+1);
    swap(nums[l],nums[i]);
    return partition(nums,l,r);
}*/

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    // 请在这里完成你的代码
    if(l<r)
    {
        int q=partition(nums,l,r);
        quick_sort(nums,l,q-1);
        quick_sort(nums,q+1,r);
    }

}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    srand(static_cast<unsigned int>(time(0)));
    quick_sort(nums, 0, nums.size() - 1);
}
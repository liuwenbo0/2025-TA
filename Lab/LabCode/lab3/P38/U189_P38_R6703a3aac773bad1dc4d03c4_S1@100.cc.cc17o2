#include "QuickSort.h"

int QuickSort::partition(std::vector<int>& nums, int p, int q) {

    int standard=nums[p];
    while(p<q)
    {
        while(p<q&&nums[q]>=standard)
        q--;
        nums[p]=nums[q];
        while(p<q&&nums[p]<=standard)
        p++;
        nums[q]=nums[p];
    }
    nums[p]=standard;
    return p;
}


void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    if(l<r)
    {
        int standardpos=partition(nums,l,r);
        quick_sort(nums,l,standardpos-1);
        quick_sort(nums,standardpos+1,r);
    }
}

void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
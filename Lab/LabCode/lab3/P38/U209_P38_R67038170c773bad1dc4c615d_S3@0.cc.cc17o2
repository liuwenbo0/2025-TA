#include "QuickSort.h"

int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
int pivot=nums[q];
int i=p-1;
for(int j=p;j<=q-1;j++){
    if(nums[j]<=pivot){
        i++;
        std::swap(nums[i],nums[j]);
    }
}
std::swap(nums[i+1],nums[q]);
    return i+1;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    // 请在这里完成你的代码
if(1<r){
    int pi=partition(nums,1,r);
    quick_sort(nums,1,pi-1);
    quick_sort(nums,pi+1,r);
}
}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
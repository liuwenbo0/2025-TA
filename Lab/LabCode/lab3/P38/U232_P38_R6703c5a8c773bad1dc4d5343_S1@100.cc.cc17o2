#include "QuickSort.h"

int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
    int temp=p+rand()%(q-p);
    swap(nums[p],nums[temp]);
    int pi=nums[p];
    int i=p;
    int j;
    for(j=p+1;j<=q;j++)
    {
      if(nums[j]<pi)
      {
        i++;
        swap(nums[i],nums[j]);
      }
    }
    swap(nums[i],nums[p]);

    return i;

    return 0;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    // 请在这里完成你的代码
        int m;
    if(l < r)
    {
      m=partition(nums,l,r);
      quick_sort(nums,l,m-1);
      quick_sort(nums,m+1,r);
    } 

}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
#include "QuickSort.h"
#include <cstdlib>
int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
	int random=(p+q)/2;
	if(nums[p]!=nums[random]) nums[p]^=nums[random]^=nums[p]^=nums[random];
	int pivot=nums[p],i=p;
	for(int j=p+1;j<=q;++j)
	{
		if(nums[j]<pivot)
		{
			++i;
			if(nums[i]!=nums[j]) nums[i]^=nums[j]^=nums[i]^=nums[j];
		}
	}
	if(nums[p]!=nums[i]) nums[i]^=nums[p]^=nums[i]^=nums[p];
    return i;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    if(l<r)
	{
		int m=partition(nums,l,r);
		quick_sort(nums,l,m-1);
		quick_sort(nums,m+1,r);
	}
}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
#include <iostream>
#include <deque>
#include <vector>
using namespace std;
vector<int> maxSlidingWindow(vector<int>& nums, int k) {
    deque<int> deq;
    vector<int> result;
    for (int i = 0; i < nums.size(); ++i) {
        if (!deq.empty() && deq.front() == i - k) {
            deq.pop_front();
        }
        while (!deq.empty() && nums[deq.back()] < nums[i]) {
            deq.pop_back();
        }
        deq.push_back(i);
        if (i >= k - 1) {
            result.push_back(nums[deq.front()]);
        }
    }
    return result;
}
int main() {
    int n, k;
    cin >> n >> k;
    vector<int> nums(n);
    for (int i = 0; i < n; ++i) {
        cin >> nums[i];
    }
    vector<int> result = maxSlidingWindow(nums, k);
    for (int i = 0; i < result.size(); ++i) {
        if (i != 0) cout << " ";
        cout << result[i];
    }
    cout << endl;
    return 0;
}
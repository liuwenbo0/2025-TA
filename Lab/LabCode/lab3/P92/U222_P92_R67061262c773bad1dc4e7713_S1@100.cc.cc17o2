#include <iostream>
#include <vector>
#include <deque>

std::vector<int> findMaxInWindows(int n, int k, std::vector<int> nums) {
    std::vector<int> result;
    std::deque<int> dq;
    for (int i = 0; i < n; ++i) {
        while (!dq.empty() && nums[dq.back()] <= nums[i]) {
            dq.pop_back();
        }
        dq.push_back(i);
        if (dq.front() <= i - k) {
            dq.pop_front();
        }
        if (i >= k - 1) {
            result.push_back(nums[dq.front()]);
        }
    }
    return result;
}

int main() {
    int n, k;
    std::cin >> n >> k;
    std::vector<int> nums(n);
    for (int i = 0; i < n; i++) {
        std::cin >> nums[i];
    }
    std::vector<int> maxInWindows = findMaxInWindows(n, k, nums);
    for (int val : maxInWindows) {
        std::cout << val << " ";
    }
    std::cout << std::endl;
    return 0;
}
#include <iostream>
#include <vector>
#include <deque>

void findMaxInSlidingWindow(int numElements, int windowSize, const std::vector<int>& inputArray) {
    std::deque<int> indexQueue;
    std::vector<int> results;

    for (int i = 0; i < numElements; ++i) {
        while (!indexQueue.empty() && indexQueue.front() < i - windowSize + 1) {
            indexQueue.pop_front();
        }

        while (!indexQueue.empty() && inputArray[indexQueue.back()] <= inputArray[i]) {
            indexQueue.pop_back();
        }

        indexQueue.push_back(i);

        if (i >= windowSize - 1) {
            results.push_back(inputArray[indexQueue.front()]);
        }
    }

    for (size_t i = 0; i < results.size(); ++i) {
        std::cout << results[i];
        if (i < results.size() - 1) std::cout << " ";
    }
    std::cout << std::endl;
}

int main() {
    int n, k;
    std::cin >> n >> k;
    std::vector<int> array(n);

    for (int i = 0; i < n; ++i) {
        std::cin >> array[i];
    }

    findMaxInSlidingWindow(n, k, array);

    return 0;
}
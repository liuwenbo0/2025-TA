#include<iostream>
#include<vector>
#include<queue>
using namespace std;
vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n = nums.size();
        priority_queue<pair<int, int>> q;
        //先将k个数放入窗口，这k个数按优先队列的规则排序，并配对相应的下标
        for (int i = 0; i < k; ++i) {
            q.emplace(nums[i], i);
        }
        //将最大数录入ans中
        vector<int> ans = {q.top().first};
        for (int i = k; i < n; ++i) {
            q.emplace(nums[i], i);
            //随着窗口的滑动，最大数并不会一直处在窗口中，这时候可以永久删除最大值，判断的条件是小标小于等于i-k
            while (q.top().second <= i - k) {
                q.pop();
            }
            ans.push_back(q.top().first);
        }
        return ans;
    }
int main()
{
    int n,k;
    cin>>n>>k;
    vector<int>nums(n);
    for(int i=0;i<n;i++)
    {
        int x;
        cin>>x;
        nums[i]=x;
    }
    vector<int>ans=maxSlidingWindow(nums,k);
    for(int j=0;j<n-k+1;j++)
    {
          cout<<ans[j]<<" ";
    }
}
#include <iostream>
#include <vector>
#include <deque>

using namespace std;

void findMaxInSlidingWindow(int n, int k, const vector<int>& arr) {
    deque<int> dq;
    vector<int> result;

    for (int i = 0; i < n; ++i) {
        if (!dq.empty() && dq.front() < i - k + 1) {
            dq.pop_front();
        }
        while (!dq.empty() && arr[dq.back()] <= arr[i]) {
            dq.pop_back();
        }
        dq.push_back(i);
        if (i >= k - 1) {
            result.push_back(arr[dq.front()]);
        }
    }
    for (size_t i = 0; i < result.size(); ++i) {
        cout << result[i];
        if (i < result.size() - 1) {
            cout << " ";
        }
    }
    cout << endl;
}
int main() {
    int n, k;
    cin >> n >> k;
    vector<int> arr(n);
    for (int i = 0; i < n; ++i) 
    {
        cin >> arr[i];
    }
    findMaxInSlidingWindow(n, k, arr);
    return 0;
}
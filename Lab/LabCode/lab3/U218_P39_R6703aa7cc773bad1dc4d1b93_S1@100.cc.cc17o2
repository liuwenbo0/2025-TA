#include "ThreeWayQuickSort.h"
void ThreeWayQuickSort::three_way_quick_sort(std::vector<int>& nums, int p, int q) {
    if (p >= q) return;
    std::swap(nums[p], nums[p + rand() % (q - p + 1)]);
    int pivot = nums[p];
    int lt = p, i = p + 1, gt = q;
    while (i <= gt) {
        if (nums[i] < pivot) {
            std::swap(nums[lt++], nums[i++]);
        } else if (nums[i] > pivot) {
            std::swap(nums[i], nums[gt--]);
        } else {
            i++;
        }
    }
    three_way_quick_sort(nums, p, lt - 1);
    three_way_quick_sort(nums, gt + 1, q);
}
void ThreeWayQuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    three_way_quick_sort(nums, 0, nums.size() - 1);
}
#include "HeapSort.h"
void HeapSort::max_heapify(std::vector<int>& nums, int i) {
    int left=2*i,right=2*i+1,max=0;
    if(left<=heap_size&&nums[left]>nums[i]){
        max=left;
    }else{
        max=i;
    }
    if(right<=heap_size&&nums[right]>nums[max]){
        max=right;
    }
    if(max!=i){
        int a=nums[i];
        nums[i]=nums[max];
        nums[max]=a;
        max_heapify(nums,max);
    }

    // 请在这里完成你的代码

}
void HeapSort::build_max_heap(std::vector<int>& nums) {
    heap_size=length;
    for(int i=heap_size/2;i>0;i--){
        max_heapify(nums,i);
    }
    // 请在这里完成你的代码

}
void HeapSort::mysort(std::vector<int>& nums) {
    length = nums.size();
    nums.insert(nums.begin(), 0); // 在开头插入一个元素，使得待排序元素下标从 1 开始
    build_max_heap(nums);
    for(int i=length;i>1;i--){
        int a=nums[1];
        nums[1]=nums[i];
        nums[i]=a;
        heap_size--;
        max_heapify(nums,1);
    }
    // 请在这里完成你的代码

    nums.erase(nums.begin()); // 删除开头元素
}
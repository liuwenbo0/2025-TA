#include "QuickSort.h"
#include <cstdlib> 
#include <ctime>   
void exchange(int &a, int &b) {
    int temp = a;
    a = b;
    b = temp;
}
int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
    int siz = q - p + 1, initial = rand() % siz;
    exchange(nums[p + initial], nums[p]);
    int i = p, x = nums[i];
    for(int j = p + 1; j <= q; ++j) {
        if(nums[j] < x) {
            ++i;
            exchange(nums[i], nums[j]);
        }
    }
    exchange(nums[p], nums[i]);
    return i;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    // 请在这里完成你的代码
    if(l < r) {
        int q = partition(nums, l, r);
        quick_sort(nums, l, q - 1);
        quick_sort(nums, q + 1, r);
    }
}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) return;  
    srand(static_cast<unsigned int>(time(0)));  
    quick_sort(nums, 0, nums.size() - 1);
}
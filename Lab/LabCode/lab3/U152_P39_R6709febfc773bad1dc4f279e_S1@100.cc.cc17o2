#include "ThreeWayQuickSort.h"

void ThreeWayQuickSort::three_way_quick_sort(std::vector<int>& nums, int low, int high) {
    if (high <= low) {  
            return;  
        }  

        int pivotIndex = low + std::rand() % (high - low + 1);  
        std::swap(nums[low], nums[pivotIndex]);  
  
        int left = low;  
        int right = high;  
        int pivot = nums[low];  
        int i = low + 1;  
  
        while (i <= right) {  
            if (nums[i] < pivot) {  
                std::swap(nums[i], nums[left++]);  
                i++;  
            } else if (nums[i] > pivot) {  
                std::swap(nums[i], nums[right--]);  
            } else {  
                i++;  
            }  
        }  

        if (left - low < high - right) {  
            three_way_quick_sort(nums, low, left - 1);  
            three_way_quick_sort(nums, right + 1, high);  
        } else {  
            three_way_quick_sort(nums, right + 1, high);  
            three_way_quick_sort(nums, low, left - 1);  
        }
}

void ThreeWayQuickSort::mysort(std::vector<int>& nums) {
    if (nums.empty()) {  
            return;  
        }  
        three_way_quick_sort(nums, 0, nums.size() - 1); 
}
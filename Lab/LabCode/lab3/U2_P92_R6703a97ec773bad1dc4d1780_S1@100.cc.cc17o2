#include <iostream>
#include <vector>
#include <deque>
#include <algorithm>
using namespace std;
 
vector<int> slipwindow(vector<int>& data, int k)
{
    vector<int> ret;
    if (data.size() == 0) return ret;
 
    deque<int> q;
    for (int i = 0; i < data.size(); i++)
    {
        while (!q.empty() && data[q.back()] < data[i])
        {
            q.pop_back();
        }
        q.push_back(i);
        if (k == i - q.front())
        {
            q.pop_front();
        }
        if (i >= k - 1)
        {
            ret.push_back(data[q.front()]);
        }
 
    }
    return ret;
}
 
int main()
{
    int n, k, num;
    cin >> n >> k;
    vector<int> data;
    for(int i = 0; i < n; i++){
        cin >> num;
        data.push_back(num);
    }
    vector<int> ret = slipwindow(data, k);
    vector<int>::iterator it;
    for(it = ret.begin(); it != ret.end(); it++)
    {
        cout << *it << " ";
    }
    cout <<endl;
    return 0;
}
#include <iostream>  
#include <vector>  
#include <unordered_map>  
#include <queue>  
#include <climits>  
#include <algorithm>  
  
using namespace std;  
  
int main() {  
    long long n, q;  
    cin >> n >> q;  
  
  
    vector<long long> a(n);  
    for (long long i = 0; i < n; ++i) {  
        cin >> a[i];  
    }  
    unordered_map<long long, vector<long long>> cut;  
    for (long long i = 0; i < n; ++i) {  
        long long height = a[i];  
        long long cuts = 0;  
  
        while (height > 0) {  
            cut[height].push_back(cuts);  
            height /= 2;  
            ++cuts;  
        }  
    }  
  
    long long mincounts = LLONG_MAX;  
    for (auto &[height, cuts] : cut) {  
        if (static_cast<long long>(cuts.size()) < q) continue;  
        sort(cuts.begin(), cuts.end());  
  
        long long current_cuts = 0;  
        for (long long i = 0; i < q; ++i) {  
            current_cuts += cuts[i];  
        }  
        mincounts = min(mincounts, current_cuts);  
    }  
  
    cout << (mincounts == LLONG_MAX ? -1 : mincounts) << endl;  
  
    return 0;  
}
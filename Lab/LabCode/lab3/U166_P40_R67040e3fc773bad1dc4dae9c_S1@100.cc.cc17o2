#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <limits.h>

using namespace std;

int main() {
    int n, q;
    cin >> n >> q;
    vector<int> heights(n);
    for (int i = 0; i < n; i++) {
        cin >> heights[i];
    }

    unordered_map<int, vector<int>> height_map;

    for (int h : heights) {
        int current_height = h;
        int cuts = 0;

        while (current_height > 0) {
            height_map[current_height].push_back(cuts);
            current_height /= 2;
            cuts++;
        }
    }

    int min_cuts = INT_MAX;

    for (auto& pair : height_map) {
        auto& cut_counts = pair.second;

        if (cut_counts.size() < q) {
            continue;
        }

        sort(cut_counts.begin(), cut_counts.end());
        int total_cuts = 0;
        for (int i = 0; i < q; i++) {
            total_cuts += cut_counts[i];
        }

        min_cuts = min(min_cuts, total_cuts);
    }

    if (min_cuts == INT_MAX) {
        min_cuts = 0;
    }

    cout << min_cuts << endl;

    return 0;
}
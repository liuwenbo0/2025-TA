#include "ThreeWayQuickSort.h"
void ThreeWayQuickSort::three_way_quick_sort(std::vector<int>& nums, int p, int q) {
    if(p>=q)
    {
        return;
    }
    srand( (unsigned)time( NULL ) );
    int x=p+rand()%(q-p+1);
    swap(nums[p],nums[x]);
    int lt=p+1,rt=q,i=p+1;
    while(i<=rt)
    {
        if(nums[i]>nums[p])
        {
            swap(nums[i],nums[rt]);
            rt--;
        }else if(nums[i]<nums[p])
        {
            swap(nums[lt],nums[i]);
            lt++;
            i++;
        }else{
            i++;
        }
    }
    swap(nums[p],nums[lt-1]);
    ThreeWayQuickSort::three_way_quick_sort(nums,p,lt-2);
    ThreeWayQuickSort::three_way_quick_sort(nums, rt+1,q);
}
void ThreeWayQuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    three_way_quick_sort(nums, 0, nums.size() - 1);
}
    // int temp=nums[p];
    // int lt=p,rt=q;
    // int i=p+1;
    // while(i<=q)
    // {
    //     if(nums[i]<temp)
    //     {
    //         swap(nums[i],nums[p]);
    //         p++;
    //         i++;
    //     }else if(nums[i]>temp)
    //     {
    //         swap(nums[q],nums[i]);
    //         q--;
    //         i++;
    //         p++;
    //     }else if(nums[i]==temp)
    //     {
    //         i++;
    //     }
    // }
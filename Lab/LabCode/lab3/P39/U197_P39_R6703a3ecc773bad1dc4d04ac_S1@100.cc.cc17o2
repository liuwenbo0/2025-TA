#include "ThreeWayQuickSort.h"
#include <ctime>
#include <cstdlib>
#include <utility>

inline void swap(int& a, int& b)
{
    auto tmp = a;
    a = b;
    b = tmp;
}

std::pair<int, int> partition(std::vector<int>& nums, int p, int q)
{
    std::srand(std::time(NULL));
    auto midInd = rand() % (q - p + 1) + p;
    swap(nums[midInd], nums[q]);
    auto midVal = nums[q];
    int i = p, j = p;
    for (; j <= q - 1; j++)
    {
        if (nums[j] < midVal)
        {
            swap(nums[i], nums[j]);
            i++;
        }
    }
    int k = i;
    j = k;
    for (; j <= q - 1; j++)
    {
        if (nums[j] == midVal)
        {
            swap(nums[k], nums[j]);
            k++;
        }
    }
    swap(nums[q], nums[k]);
    return std::make_pair(i, k);
}

void ThreeWayQuickSort::three_way_quick_sort(std::vector<int>& nums, int l, int r)
{
    if (l >= r)
        return;
    auto mids = partition(nums, l, r);
    three_way_quick_sort(nums, l, mids.first - 1);
    three_way_quick_sort(nums, mids.second + 1, r);
}
void ThreeWayQuickSort::mysort(std::vector<int>& nums)
{
    if (nums.size() == 0)
        return;
    three_way_quick_sort(nums, 0, nums.size() - 1);
}
#include "ThreeWayQuickSort.h"

void ThreeWayQuickSort::three_way_quick_sort(std::vector<int>& nums, int p, int q) {
    if (p >= q) {
        return;
    }

    int lt = p;    // 左边界
    int gt = q;    // 右边界
    int i = p + 1; // 当前遍历位置
    int pivot = nums[p]; // 基准点

    while (i <= gt) {
        if (nums[i] < pivot) {
            std::swap(nums[i], nums[lt]); // 小于基准，放到左边
            i++;
            lt++;
        } else if (nums[i] > pivot) {
            std::swap(nums[i], nums[gt]); // 大于基准，放到右边
            gt--;
        } else {
            i++; 
        }
    }

    three_way_quick_sort(nums, p, lt - 1);
    three_way_quick_sort(nums, gt + 1, q);
}

void ThreeWayQuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    three_way_quick_sort(nums, 0, nums.size() - 1);
}
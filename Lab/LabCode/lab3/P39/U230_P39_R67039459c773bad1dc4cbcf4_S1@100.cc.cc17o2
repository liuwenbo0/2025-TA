#include "ThreeWayQuickSort.h"

void ThreeWayQuickSort::three_way_quick_sort(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
    if(p >= q) return;
    int pivot = nums[p + rand() % (q - p + 1)];
    int i = p;
    int j = p;  // [p,j−1] 表示小于pivot 的区间
    int k = q;  // [k+1,q] 表示大于pivot 的区间
    while (i <= k){
      if (nums[i] < pivot){
        swap(nums[i],nums[j]);
        i++;
        j++;
      }
      else if (nums[i] > pivot){
        swap(nums[i],nums[k]);  // 交换后的 nums[i] 可能仍需比较
        k--;
      }
      else{
        i++;
      }
    }
    three_way_quick_sort(nums, p, j - 1);
    three_way_quick_sort(nums, k+1, q);


}
void ThreeWayQuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    three_way_quick_sort(nums, 0, nums.size() - 1);
}
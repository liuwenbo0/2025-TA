#include "ThreeWayQuickSort.h"

void ThreeWayQuickSort::three_way_quick_sort(std::vector<int>& nums, int p, int q) {
    if (p >= q) return; // 递归终止条件

    int v = nums[p]; // 选取基准值
    int lt = p;      // 小于基准值的指针
    int gt = q;      // 大于基准值的指针
    int i = p + 1;   // 当前指针

    while (i <= gt) {
        if (nums[i] < v) {
            // 将小于基准值的元素放到左侧
            int temp = nums[lt];
            nums[lt] = nums[i];
            nums[i] = temp;
            lt++;
            i++;
        } else if (nums[i] > v) {
            // 将大于基准值的元素放到右侧
            int temp = nums[i];
            nums[i] = nums[gt];
            nums[gt] = temp;
            gt--;
        } else {
            i++; // 等于基准值的元素保持在中间
        }
    }

    // 递归排序左侧和右侧
    three_way_quick_sort(nums, p, lt - 1);
    three_way_quick_sort(nums, gt + 1, q);
}

void ThreeWayQuickSort::mysort(std::vector<int>& nums) {
    if (nums.empty()) 
        return;
    three_way_quick_sort(nums, 0, nums.size() - 1);
}
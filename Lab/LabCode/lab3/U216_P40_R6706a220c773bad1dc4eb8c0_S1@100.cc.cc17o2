#include <iostream>
#include <vector>
#include <unordered_map>
#include <queue>
#include <algorithm>
#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <climits>

using namespace std;

int main() {
    int n, q;
    cin >> n >> q;
    
    vector<int> heights(n);
    unordered_map<int, vector<int>> cut_map;

    for (int i = 0; i < n; ++i) {
        cin >> heights[i];
    }

    for (int h : heights) {
        int current_height = h;
        int cuts = 0;
        
        while (current_height > 0) {
            cut_map[current_height].push_back(cuts);
            current_height >>= 1; // 除以2
            ++cuts;
        }
    }

    int result = INT_MAX;  

    for (auto& [height, cut_list] : cut_map) {
        if (cut_list.size() < static_cast<size_t>(q)) {  
            continue; 
        }

        // 使用前q个元素
        nth_element(cut_list.begin(), cut_list.begin() + q, cut_list.end());
        int current_cost = 0;
        for (int i = 0; i < q; ++i) {
            current_cost += cut_list[i];
        }

        result = min(result, current_cost); 
    }

    if (result == INT_MAX) {
        cout << -1 << endl; // 树数量不够则输出-1
    } else {
        cout << result << endl;
    }

    return 0;
}
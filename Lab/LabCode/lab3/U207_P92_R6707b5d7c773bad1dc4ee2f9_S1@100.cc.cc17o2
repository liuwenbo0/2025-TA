#include <iostream>
#include <vector>
#include <deque>
using namespace std;
vector<int> maxInSlidingWindow(vector<int>& nums, int k) 
{
    vector<int> result;
    deque<int> dq;
    int i=0;
    while(i < nums.size()) 
    {
        while (!dq.empty() && nums[i] >= nums[dq.back()]) 
        {
            dq.pop_back();
        }
        dq.push_back(i);
        if (i >= k - 1) 
        {
            result.push_back(nums[dq.front()]);
        }
        if (dq.front() <= i - k + 1) 
        {
            dq.pop_front();
        }
        i++;
    }
    return result;
}

int main() 
{
    int n, k;
    cin >> n >> k;
    vector<int> nums(n);
    int i=0;
    while (i < n) 
    {
        cin >> nums[i];
        i++;
    }
    vector<int> res = maxInSlidingWindow(nums, k);
    for (int num : res) 
    {
        cout << num << " ";
    }
    cout << endl;
    return 0;
}
#include "QuickSort.h"
int QuickSort::partition(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
	int index = p;
	int temp = nums[index];
	int left = p;
	int right = q;
	while(left<right){
		while(left < right &&nums[right]>=temp){
			right--;
		}
		nums[left] = nums[right];
		while(left < right &&nums[left]<=temp){
			left++;
		}
		nums[right]=nums[left];
		swap(nums[left],nums[right]);
	}
	nums[right]=temp;
	return right;
}

void QuickSort::quick_sort(std::vector<int>& nums, int l, int r) {
    // 请在这里完成你的代码
    if(l>=r) return;
	int p;
	p = partition(nums,l,r);
	
	quick_sort(nums,l,p-1);
	quick_sort(nums,p+1,r);
}
void QuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    quick_sort(nums, 0, nums.size() - 1);
}
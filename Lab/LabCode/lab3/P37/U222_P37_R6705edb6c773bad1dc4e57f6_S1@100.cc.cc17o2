#include "HeapSort.h"

void HeapSort::max_heapify(std::vector<int>& nums, int i) 
{
    int largest;
    int l = 2 * i;
    int r = 2 * i + 1;
    if (l <= heap_size && nums[l] > nums[i])
     {
        largest = l;
    } else {
        largest = i;
    }
    if (r <= heap_size && nums[r] > nums[largest]) 
    {
        largest = r;
    }
    if (largest!= i) 
    {
        std::swap(nums[i], nums[largest]);
        max_heapify(nums, largest);
    }
    //请在这里完成你的代码
}
 
void HeapSort::build_max_heap(std::vector<int>& nums)
 {
    heap_size = nums.size() - 1;
    for (int i = nums.size() / 2; i >= 1; --i)
     {
        max_heapify(nums, i);
    }
    //请在这里完成你的代码
}

void HeapSort::mysort(std::vector<int>& nums)
 {
    length = nums.size();
    nums.insert(nums.begin(), 0);
    build_max_heap(nums);
    for (int i = nums.size() - 1; i >= 2; --i)
     {
        std::swap(nums[1], nums[i]);
        heap_size--;
        max_heapify(nums, 1);
    }
    nums.erase(nums.begin());
    //请在这里完成你的代码
}
#include "HeapSort.h"
void HeapSort::max_heapify(std::vector<int>& nums, int i) {
    int l=2*i,r=l+1;
    int larg=0;
    int tem=0;
    if (l<=heap_size&&nums[l]>nums[i])
    {
        larg=l;
    }
    else {
        larg=i;
    }
    if(r<=heap_size&&nums[r]>nums[larg])
    {
        larg=r;
    }
    if(larg!=i)
    {
        tem=nums[i];
        nums[i]=nums[larg];
        nums[larg]=tem;
        max_heapify(nums,larg);
    }

}
void HeapSort::build_max_heap(std::vector<int>& nums) {
    // 请在这里完成你的代码
    heap_size=length;
    for(int i=length/2;i>=1;i--)
    HeapSort::max_heapify(nums, i);

}
void HeapSort::mysort(std::vector<int>& nums) {
    length = nums.size();
    nums.insert(nums.begin(), 0); // 在开头插入一个元素，使得待排序元素下标从 1 开始
    // 请在这里完成你的代码
    HeapSort::build_max_heap(nums);
    while(heap_size>1)
    {
        
        int tem=nums[1];
    nums[1]=nums[heap_size];
    nums[heap_size]=tem;
    heap_size--;
    HeapSort::max_heapify(nums, 1);
    }

    nums.erase(nums.begin()); // 删除开头元素
}
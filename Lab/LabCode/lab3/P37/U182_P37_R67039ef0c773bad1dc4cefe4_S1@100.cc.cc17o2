#include "HeapSort.h"
void HeapSort::max_heapify(std::vector<int>& nums, int i) {
    // 请在这里完成你的代码
    int l = 2 * i; 
    int r = 2 * i + 1; 
    int largest = i;
    if (l <= length && nums[l] > nums[largest]) {
        largest = l;
    }
    if (r <= length && nums[r] > nums[largest]) {
        largest = r;
    }
    if (largest != i) {
        int flag;
        flag = nums[i];
        nums[i] = nums[largest];
        nums[largest] = flag;
        max_heapify(nums, largest);
    }

}
void HeapSort::build_max_heap(std::vector<int>& nums) {
    // 请在这里完成你的代码
        for (int i = nums.size() / 2; i > 0; --i) {
            max_heapify(nums, i);
        }
}
void HeapSort::mysort(std::vector<int>& nums) {
    length = nums.size();
    nums.insert(nums.begin(), 0); // 在开头插入一个元素，使得待排序元素下标从 1 开始
    // 请在这里完成你的代码
        build_max_heap(nums);
        int tmp;
        for (int i = length; i > 1; --i) {
            tmp = nums[1];
            nums[1] = nums[i];
            nums[i] = tmp;
            length--;
            max_heapify(nums, 1);
        }
    nums.erase(nums.begin()); // 删除开头元素
}
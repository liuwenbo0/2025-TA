#include "HeapSort.h"

int heap_size;
int length;
void myswap(int &x,int &y) {(x==y) || (x^=y^=x^=y);}
void HeapSort::max_heapify(std::vector<int>& nums, int i) {
    // 请在这里完成你的代码
	int temp=nums[i];
	for(int k=i*2;k<=heap_size;k=k*2)
	{
		if(k+1<=heap_size && nums[k]<nums[k+1]) k++;
		if(nums[k]>temp) nums[i]=nums[k],i=k;
		else break;
	}
	nums[i]=temp;

}
void HeapSort::build_max_heap(std::vector<int>& nums) {
// 请在这里完成你的代码
	heap_size=length;
	for(int i=length/2;i>=1;i--) max_heapify(nums,i);
	for(int i=length;i>=1;i--)
	{
        // printf("%d\n",nums[1]);
		myswap(nums[1],nums[i]);
		heap_size=i-1;
		max_heapify(nums,1);
	}
}
void HeapSort::mysort(std::vector<int>& nums) {
	length = nums.size();
	nums.insert(nums.begin(), 0); // 在开头插入一个元素，使得待排序元素下标从 1 开始
	// 请在这里完成你的代码
	build_max_heap(nums);
    // myswap(nums[1],nums[2]);
	nums.erase(nums.begin()); // 删除开头元素
}
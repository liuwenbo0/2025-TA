#include "HeapSort.h"
void HeapSort::max_heapify(std::vector<int>& nums, int i) {
    // 请在这里完成你的代码
int left=2*i,right=2*i+1;

int largest=i;if(left<=heap_size&&nums[largest]<nums[left]){largest=left;}
if(right<=heap_size&&nums[largest]<nums[right]){largest=right;}
if(largest!=i){std::swap(nums[i],nums[largest]);}
max_heapify(nums,largest);
}
void HeapSort::build_max_heap(std::vector<int>& nums) {
    // 请在这里完成你的代码
heap_size=nums.size();
for(int i=heap_size/2;i>=1;--i){
    max_heapify(nums,i);
}
}
void HeapSort::mysort(std::vector<int>& nums) {
    length = nums.size();
    nums.insert(nums.begin(), 0); // 在开头插入一个元素，使得待排序元素下标从 1 开始
    // 请在这里完成你的代码
build_max_heap(nums);
for(int i=heap_size;i>=2;--i){
    std::swap(nums[1],nums[i]);
    --heap_size;
    max_heapify(nums,1);
}
    nums.erase(nums.begin()); // 删除开头元素
}
#include "ThreeWayQuickSort.h"
#include<random>
#include<utility>

void ThreeWayQuickSort::three_way_quick_sort(std::vector<int>& nums, int p, int q) {
    // 请在这里完成你的代码
    //if(p >= q) return;
    //random_device rd;
    //mt19937 gen(rd());
    //uniform_int_distribution<> dis(p, q);
    //int rand = dis(gen);

    while(p < q){
      int mid = p +(q - p) / 2;
      if(nums[p] > nums[mid])   swap(nums[p],nums[mid]);
      if(nums[p] > nums[q])   swap(nums[p],nums[q]);
      if(nums[mid] > nums[q])   swap(nums[mid],nums[q]);
    
    int pivot = nums[mid];
    int i = p, j = p, k = q;
    while(i <= k){
      if(nums[i] < pivot){
        swap(nums[i],nums[j]);
        i++;
        j++;
      }
      else if(nums[i] > pivot){
        swap(nums[i],nums[k]);
        k--;
      }
      else{
        i++;
      }
    }
    //three_way_quick_sort(nums,p,j-1);
    //three_way_quick_sort(nums,k+1,q);
    if(j - p < q - k){
      three_way_quick_sort(nums,p,j-1);
      p = k + 1;
    }
    else{
      three_way_quick_sort(nums,k+1,q);
      q = j - 1;
    }
  }
}
void ThreeWayQuickSort::mysort(std::vector<int>& nums) {
    if(nums.size() == 0) 
      return;
    three_way_quick_sort(nums, 0, nums.size() - 1);
}
#include <iostream>
using namespace std;
#define MAXN 500003

int a[MAXN],in[MAXN],b[MAXN],temp[MAXN];
long long int ans1=0,ans2=0;
int n;

void MergeSort(int begin, int end)
{
    if(begin<end)
    {
        int mid=begin+(end-begin)/2;
        MergeSort(begin,mid);
        MergeSort(mid+1,end);
        int i=begin,j=mid+1,k=begin;
        while(i!=mid+1&&j!=end+1)
        {
            if(a[i]>a[j]) temp[k++]=a[j++];
            else temp[k++]=a[i++];
            ++ans1;
        }
        while(i!=mid+1) temp[k++]=a[i++];
        while(j!=end+1) temp[k++]=a[j++];
        for(i=begin;i<=end;i++) a[i]=temp[i];
    }
    return;
}

void InsertSort()
{
    for(int i=1;i<n;++i)
    {
        int j=i;
        while(j && ++ans2 && b[j]<b[j-1])
        {
            b[j]^=b[j-1];
            b[j-1]^=b[j];
            b[j]^=b[j-1];
            --j;
        }
    }
}

int main()
{
    cin>>n;
    for(int i=0;i<n;i++)
    {
        cin>>in[i];
        a[i]=b[i]=in[i];
    }
    MergeSort(0,n-1);
    temp[0]=b[0];
    InsertSort();
    cout<<ans1<<' '<<ans2;
    return 0;
}
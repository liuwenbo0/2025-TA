#include "MergeSort.h"

// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int>& nums, int left, int right)
{
    if (right <= left)
        return;
    auto mid = (left + right) / 2;
    merge_sort_aux(nums, left, mid);
    merge_sort_aux(nums, mid + 1, right);
    std::vector<int> vecL, vecR;
    for (int i = left; i <= mid; i++)
        vecL.push_back(nums.at(i));
    for (int i = mid + 1; i <= right; i++)
        vecR.push_back(nums.at(i));
    int i = 0, j = 0;
    for (int k = left; k <= right; k++)
    {
        if (j >= vecR.size())
        {
            nums.at(k) = vecL.at(i);
            i++;
        }
        else if (i >= vecL.size())
        {
            nums.at(k) = vecR.at(j);
            j++;
        }
        else if (vecL.at(i) < vecR.at(j))
        {
            nums.at(k) = vecL.at(i);
            i++;
        }
        else
        {
            nums.at(k) = vecR.at(j);
            j++;
        }
    }
}
#include "MyStack.h"

// 判断栈空, 若为空栈,则Empty()返回true；否则返回false
bool MyStack::Empty() {
    return top == -1; // 栈顶指针为 -1 表示栈是空的
}

// 判断栈满，若栈满，则Full()为true；否则为false
bool MyStack::Full() {
    return top == MAXLENG - 1; // 栈顶指针等于最大长度 - 1 表示栈已满
}

// 元素e进栈，若栈满，则无法成功插入，插入成功返回true，否则返回false
// @param
// e: 将要入栈的元素
bool MyStack::Push(ElementType e) {
    if (Full()) { // 先检查栈是否已满
        return false; // 栈满，无法插入
    }
    elem[++top] = e; // 增加栈顶指针并插入元素
    return true; // 插入成功
}

// 栈的顶元素拷贝到e，若栈为空，则无法拷贝，返回false，成功拷贝则返回true
// @param
// e: 指向存放栈顶元素地址的指针
bool MyStack::Gettop(ElementType &e) {
    if (Empty()) { // 先检查栈是否为空
        return false; // 栈空，无法获取栈顶元素
    }
    e = elem[top]; // 将栈顶元素赋值给e
    return true; // 获取成功
}

// 删除栈的顶元素，并将删除的元素赋给e，若栈空，则无法成功删除，删除成功返回true，否则返回false
// @param
// e: 指向存放出栈元素地址的指针
bool MyStack::Pop(ElementType &e) {
    if (Empty()) { // 先检查栈是否为空
        return false; // 栈空，无法出栈
    }
    e = elem[top--]; // 先获取栈顶元素，然后降低栈顶指针
    return true; // 出栈成功
}
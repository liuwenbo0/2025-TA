#include <iostream>  
#include <vector>  
using namespace std;
  
// 全局变量,记录逆序对的数量  
long long count = 0;  

void merge(std::vector<int>& arr, std::vector<int>& temp, int left, int mid, int right) {  
    int i = left;  
    int j = mid + 1;  
    int k = left;  
  
    // 归并过程中统计逆序对  
    while (i <= mid && j <= right) {  
        if (arr[i] <= arr[j]) {  
            temp[k++] = arr[i++];  
        } else {  
            temp[k++] = arr[j++];  
            count += (mid - i + 1);  
        }  
    }  
  
    // 复制剩余元素  
    while (i <= mid) {  
        temp[k++] = arr[i++];  
    }  
    while (j <= right) {  
        temp[k++] = arr[j++];  
    }  
  
    // 将合并后的数组复制回原数组  
    for (i = left; i <= right; ++i) {  
        arr[i] = temp[i];  
    }  
}  
  
void mergeSort(std::vector<int>& arr, std::vector<int>& temp, int left, int right) {  
    if (left < right) {  
        int mid = left + (right - left) / 2;  
        mergeSort(arr, temp, left, mid);  
        mergeSort(arr, temp, mid + 1, right);  
        merge(arr, temp, left, mid, right);  
    }  
}  

  
int main() {  
    int n;  
    cin >> n;  
    vector<int> arr(n);  
    vector<int> temp(n);  
  
    for (int i = 0; i < n; ++i) {  
        cin >> arr[i];  
    }  
    mergeSort(arr, temp, 0, n - 1);  
    cout << count << endl;  
    return 0;  
}
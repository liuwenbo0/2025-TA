#include "MergeSort.h"

void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right) {
    if (left >= right) return; // 如果区间只有一个元素或没有元素，则不需要排序

    int mid = left + (right - left) / 2; // 计算中间点，避免溢出
    merge_sort_aux(nums, left, mid); // 递归排序左半部分
    merge_sort_aux(nums, mid + 1, right); // 递归排序右半部分

    // 合并两个已排序的区间
    std::vector<int> temp(right - left + 1); // 创建临时数组用于存放合并后的数组
    int i = left, j = mid + 1, k = 0; // 初始化三个指针

    while (i <= mid && j <= right) {
        if (nums[i] <= nums[j]) {
            temp[k++] = nums[i++];
        } else {
            temp[k++] = nums[j++];
        }
    }

    // 复制剩余的元素
    while (i <= mid) {
        temp[k++] = nums[i++];
    }
    while (j <= right) {
        temp[k++] = nums[j++];
    }

    // 将合并后的数组复制回原数组
    for (i = left, k = 0; i <= right; ++i, ++k) {
        nums[i] = temp[k];
    }
}
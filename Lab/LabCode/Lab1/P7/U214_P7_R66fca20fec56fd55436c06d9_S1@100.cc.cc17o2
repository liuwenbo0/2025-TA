#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    if(left<right){
        int mid=left+(right-left)/2;
        MergeSort::merge_sort_aux(nums,left,mid);
        MergeSort::merge_sort_aux(nums,mid+1,right);
        int n1=mid-left,n2=right-mid-1,i,j,k;
        int L[n1+1],R[n2+1];
        for(i=0;i<=n1;i++){
            L[i]=nums[i+left];
        }
        for(j=0;j<=n2;j++){
            R[j]=nums[j+mid+1];
        }
        for(i=0,j=0,k=left;i<=n1&&j<=n2;k++){
            if(L[i]>R[j]){
                nums[k]=R[j];
                j++;
            }
            else{
                nums[k]=L[i];
                i++;
            }
        }
        while(i<=n1){
            nums[k++]=L[i++];
        }
        while(j<=n2){
            nums[k++]=R[j++];
        }
    }
}
#include "MergeSort.h"
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    int l, r, mid;
    l = left, r = right, mid = (l + r) / 2;
    if(r-l<=0)
    {
        return;
    }
    merge_sort_aux(nums, l, mid);
    merge_sort_aux(nums, mid+1, r);
    vector<int> temp(r-l+1);
    int p1 = l, p2 = mid+1,k = 0;
    while (p1 <= mid && p2 <= r)
    {
        if (nums[p1] > nums[p2])
        {
            temp[k++] = nums[p2++];
        }
        else
        {
            temp[k++] = nums[p1++];
        }
    }
    while(p1 <= mid)
    {
        temp[k++] = nums[p1++];
    }
    while (p2 <= r)
    {
        temp[k++] = nums[p2++];
    }
    for (int i = l; i <= r; i++)
    {
        nums[i] = temp[i - l];
    }
}
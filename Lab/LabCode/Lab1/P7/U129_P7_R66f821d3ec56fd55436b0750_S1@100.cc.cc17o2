#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    if(left<right){
        int q=(left+right)/2;
        merge_sort_aux(nums, left, q);
        merge_sort_aux(nums, q+1, right);
        int n1=q-left+1;
        int n2=right-q;
        int *L=new int[n1+1];
        int *R=new int[n2+1];
        for(int i=0;i<=n1-1;i++){
            L[i]=nums[left+i];
        }
        for(int j=0;j<=n2-1;j++){
            R[j]=nums[q+j+1];
        }
        L[n1]=2147483647;
        R[n2]=2147483647;
        int k;
        int m=0,n=0;
        for(k=left;k<=right;k++){
            if(L[m]<=R[n]){
                nums[k]=L[m];
                m++;
            }
            else{
                nums[k]=R[n];
                n++;
            }
        }
    }
    // else{
    //     if(nums[left]>nums[right]){
    //         int a=nums[left];
    //         nums[left]=nums[right];
    //         nums[right]=a;
    //     }
    // }
}
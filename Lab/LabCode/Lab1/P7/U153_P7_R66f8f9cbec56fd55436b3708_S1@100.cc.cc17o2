#include "MergeSort.h"
#include <climits>
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    //请在这里完成你的代码
    if (left < right) {
        int mid = left + (right - left) / 2;
        merge_sort_aux(nums, left, mid);
        merge_sort_aux(nums, mid + 1, right);
            int n1 = mid - left + 1;
    int n2 = right - mid;
    std::vector<int> nums2(n1 + 1), nums3(n2 + 1);
    int i, j;
    
    // 复制两个子数组到 nums2 和 nums3
    for (i = 0; i < n1; i++) {
        nums2[i] = nums[left + i];
    }
    for (j = 0; j < n2; j++) {
        nums3[j] = nums[mid + 1 + j];
    }
    
    // 哨兵值，表示每个子数组的结束
    nums2[n1] = INT_MAX;
    nums3[n2] = INT_MAX;
    
    i = 0;
    j = 0;
    
    // 合并两个子数组
    for (int k = left; k <= right; k++) {
        if (nums2[i] <= nums3[j]) {
            nums[k] = nums2[i];
            i++;
        } else {
            nums[k] = nums3[j];
            j++;
        }
    }
    }    
}
#include "MergeSort.h"

// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right) {
    if (left >= right) return; // 如果区间无效，直接返回

    int mid = left + (right - left) / 2; // 找到中点

    // 递归排序左半部分
    merge_sort_aux(nums, left, mid);
    // 递归排序右半部分
    merge_sort_aux(nums, mid + 1, right);

    // 合并两个已排序的部分
    std::vector<int> temp(right - left + 1);
    int i = left, j = mid + 1, k = 0;

    // 合并过程
    while (i <= mid && j <= right) {
        if (nums[i] <= nums[j]) {
            temp[k++] = nums[i++];
        } else {
            temp[k++] = nums[j++];
        }
    }

    // 复制剩余元素
    while (i <= mid) {
        temp[k++] = nums[i++];
    }
    while (j <= right) {
        temp[k++] = nums[j++];
    }

    // 将合并的结果复制回原数组
    for (int m = 0; m < temp.size(); m++) {
        nums[left + m] = temp[m];
    }
}
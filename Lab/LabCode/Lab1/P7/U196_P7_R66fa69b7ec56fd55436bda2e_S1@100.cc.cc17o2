#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    if(left<right){
        int mid=(left+right)/2;
        merge_sort_aux(nums,left,mid);
        merge_sort_aux(nums,mid+1,right);
        vector<int> leftnums(nums.begin()+left,nums.begin()+mid+1);
        vector<int> rightnums(nums.begin()+mid+1,nums.begin()+right+1);
        vector<int>::size_type i=0, j=0, k=left;
        while(i<leftnums.size()&&j<rightnums.size()){
            if(leftnums[i]<rightnums[j]){
                nums[k]=leftnums[i++];
            }
            else{
                nums[k]=rightnums[j++];
            }
            k++;
        }
        while(i<leftnums.size()){
            nums[k]=leftnums[i];
            i++;
            k++;
        }
        while(j<rightnums.size()){
            nums[k]=rightnums[j];
            j++;
            k++;
        }
    }
}
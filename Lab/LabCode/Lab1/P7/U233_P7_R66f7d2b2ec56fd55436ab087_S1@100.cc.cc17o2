#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right) {
    if(left < right){
        int middle = ((left + right)/2);
        MergeSort::merge_sort_aux(nums, left, middle);
        MergeSort::merge_sort_aux(nums, middle + 1, right);
        std::vector<int> leftPart(nums.begin() + left, nums.begin() + middle + 1);
        std::vector<int> rightPart(nums.begin() + middle + 1, nums.begin() + right + 1);
        size_t i = 0, j = 0, k = left;
        while (i < leftPart.size() && j < rightPart.size()) {
            if (leftPart[i] <= rightPart[j]) nums[k++] = leftPart[i++];
            else nums[k++] = rightPart[j++];
        }
        while (i < leftPart.size()) {
            nums[k++] = leftPart[i++];
        }
        while (j < rightPart.size()) {
            nums[k++] = rightPart[j++];
        }
    }
}
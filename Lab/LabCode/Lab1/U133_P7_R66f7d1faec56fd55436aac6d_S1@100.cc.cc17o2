#include "MergeSort.h"

void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    if (left >= right) return;

    // 找到中间点
    int mid = left + (right - left) / 2;

    // 递归地对左右两半进行归并排序
    merge_sort_aux(nums, left, mid);
    merge_sort_aux(nums, mid + 1, right);

    // 合并已排序的左右两部分
    std::vector<int> leftPart(nums.begin() + left, nums.begin() + mid + 1);
    std::vector<int> rightPart(nums.begin() + mid + 1, nums.begin() + right + 1);

    int i = 0, j = 0, k = left;

    // 合并两个部分
    while (i < leftPart.size() && j < rightPart.size()) {
        if (leftPart[i] <= rightPart[j]) {
            nums[k++] = leftPart[i++];
        } else {
            nums[k++] = rightPart[j++];
        }
    }

    

    while (i < leftPart.size()) {
        nums[k++] = leftPart[i++];
    }

    
    while (j < rightPart.size()) {
        nums[k++] = rightPart[j++];
    }
}
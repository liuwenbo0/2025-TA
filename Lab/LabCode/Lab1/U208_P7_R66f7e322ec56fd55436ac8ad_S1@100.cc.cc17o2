#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{if (left < right) {
        int mid = left + (right - left) / 2; 
        merge_sort_aux(nums, left, mid); 
        merge_sort_aux(nums, mid + 1, right);
        
        std::vector<int> left_part(nums.begin() + left, nums.begin() + mid + 1);
        std::vector<int> right_part(nums.begin() + mid + 1, nums.begin() + right + 1);
   
        std::vector<int>::size_type i = 0;
        std::vector<int>::size_type j = 0;
        int k = left; 
        
   
        while (i < left_part.size() && j < right_part.size()) {
            if (left_part[i] <= right_part[j]) {
                nums[k++] = left_part[i++]; 
            } else {
                nums[k++] = right_part[j++]; 
            }
        }

        while (i < left_part.size()) {
            nums[k++] = left_part[i++];
        }

        while (j < right_part.size()) {
            nums[k++] = right_part[j++];
        }
    }
    //请在这里完成你的代码
}
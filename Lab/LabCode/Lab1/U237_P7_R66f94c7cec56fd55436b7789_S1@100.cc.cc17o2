#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
const int maxn=1e6+5;
void msort(std::vector<int> &nums,int left,int right){
        if(left==right) return;
        int mid=(left+right)/2;
        msort(nums,left,mid);
        msort(nums,mid+1,right);//拆分

        int i=left,j=mid+1,k=left;//合并
        long long b[maxn];
        while(i<=mid && j<=right){
            if(nums[i]<=nums[j]){
                b[k++]=nums[i++];
            }else {
                b[k++]=nums[j++];
            }
        }
        while(i<=mid) b[k++]=nums[i++];

        while(j<=right) b[k++]=nums[j++];

        for(i=left;i<=right; i++)
            nums[i]=b[i];
}
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    msort(nums,left,right);
    //请在这里完成你的代码
}
#include <iostream>
#include <vector>

using namespace std;

int insert_mysort(vector<int>& nums){
    int count = 0;
    for(int j = 1; j < nums.size(); j++){
        int key = nums[j];
        int i = j - 1;
        while(i >= 0){
            count++;
            if(nums[i] > key){
                nums[i + 1] = nums[i];
                i--;
            } 
            else break;
        }
        // 将大于 key 的元素向右移动
        nums[i + 1] = key;
    }
    return count;
}

int mergeAndCount(vector<int>& nums, int left, int mid, int right){
    vector<int> leftSub(nums.begin() + left, nums.begin() + mid + 1);
    vector<int> rightSub(nums.begin() + mid + 1, nums.begin() + right + 1);
    int i = 0, j = 0, k = left;
    int count = 0;
    while(i < leftSub.size() && j < rightSub.size()){
        if(leftSub[i] <= rightSub[j]) {
            nums[k++] = leftSub[i++];
            count++;
        }
        else{
            nums[k++] = rightSub[j++];
            count++;
        }
    }
    while(i < leftSub.size()){
        nums[k++] = leftSub[i++];
        count++;
    }
    while(j < rightSub.size()){
        nums[k++] = rightSub[j++];
        count++;
    }
    return count;
}

int mergeSortAndCount(vector<int>& nums, int left, int right){
    int count = 0;
    if(left < right){
        int mid = left + (right - left) / 2;
        count += mergeSortAndCount(nums, left, mid);
        count += mergeSortAndCount(nums, mid + 1, right);
        count += mergeAndCount(nums, left, mid, right);
    }
    return count;
}

int main(){
    int n;
    cin >> n;
    //初始化表示序列中数据个数的变量并赋值
    vector<int> nums(n);
    //定义储存数据的数组
    for(int i = 0; i < n; i++){
        cin >> nums[i];
    }
    //从控制台输入具体数据
    int count_insert = insert_mysort(nums);
    int count_merge = mergeSortAndCount(nums, 0, n - 1);
    cout << count_merge << " " << count_insert << endl;
    return 0;
}
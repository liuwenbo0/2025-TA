#include "MergeSort.h"

void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    if (left < right) {
        int mid = left + (right - left) / 2;

        merge_sort_aux(nums, left, mid);
        merge_sort_aux(nums, mid + 1, right);
        
        // 合并已排序的子数组
        std::vector<int> leftArray(nums.begin() + left, nums.begin() + mid + 1);
        std::vector<int> rightArray(nums.begin() + mid + 1, nums.begin() + right + 1);

        int i = 0, j = 0, k = left;

        while (i < leftArray.size() && j < rightArray.size()) {
            if (leftArray[i] <= rightArray[j]) {
                nums[k++] = leftArray[i++];
            } else {
                nums[k++] = rightArray[j++];
            }
        }

        while (i < leftArray.size()) {
            nums[k++] = leftArray[i++];
        }
        while (j < rightArray.size()) {
            nums[k++] = rightArray[j++];
        }
    }
}
#include <iostream>
#include <stdio.h>
#include <vector>
using namespace std;

int InsertionSort(vector<int>& nums) 
{
    int i,j,length,key,count=0;
    length=nums.size();
    for(i=1;i<length;i++)
    {
      key=nums[i];
      j=i-1;
      while(j>=0 && (++count && nums[j]>key))
      {
        nums[j+1]=nums[j];
        j--;
      }
      nums[j+1]=key;
      
    }
    return count;
}

int MergeSort(vector<int> &nums, int left, int right)
{
    if(left==right)
    {
      return 0;
    }
    int mid=(left+right)/2;
    int leftcount = MergeSort(nums,left,mid);
    int rightcount = MergeSort(nums,mid+1,right);
    int length_L=mid-left+1;
    int length_R=right-mid;
    vector<int> array_L(length_L);
    vector<int> array_R(length_R);
    int i,j,k,count=0;
    for(i=0;i<length_L;i++)
    {
      array_L[i]=nums[left+i];
    }
    for(j=0;j<length_R;j++)
    {
      array_R[j]=nums[mid+1+j];
    }
    i=j=k=0; 
    while(i<length_L && j<length_R)
    {
      if(array_L[i]<=array_R[j])
      {
        nums[left+k]=array_L[i];
        i++;
      }else
      {
        nums[left+k]=array_R[j];
        j++;
      }
      k++;
      count++;
    }
    if(i==length_L)
    {
      while(j<length_R)
      {
        nums[left+k]=array_R[j];
        k++;
        j++;
      }
    }else
    {
      while(i<length_L)
      {
        nums[left+k]=array_L[i];
        k++;
        i++;
      }
    }
    return leftcount+rightcount+count;
}

int main()
{
    int n,i,num;
    scanf("%d",&n);
    getchar();
    vector<int> array1;
    vector<int> array2;
    for(i=0;i<n;i++)
    {
      scanf("%d",&num);
      getchar();
      array1.emplace_back(num);
      array2.emplace_back(num);
    }
    printf("%d %d",MergeSort(array2,0,array2.size()-1),InsertionSort(array1));
    return 0;
}
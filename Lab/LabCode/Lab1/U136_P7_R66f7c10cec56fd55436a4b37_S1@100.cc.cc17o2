#include "MergeSort.h"

void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    if (left >= right)
        return;
        
    int mid = left + (right - left) / 2;
    merge_sort_aux(nums, left, mid); 
    merge_sort_aux(nums, mid + 1, right); 
    std::vector<int> temp(right - left + 1);
    int left_idx = left, right_idx = mid + 1, temp_idx = 0;
    while (left_idx <= mid && right_idx <= right)
    {
        if (nums[left_idx] <= nums[right_idx])
            temp[temp_idx++] = nums[left_idx++];
        else
            temp[temp_idx++] = nums[right_idx++];
    }
    while (left_idx <= mid) 
        temp[temp_idx++] = nums[left_idx++];
    while (right_idx <= right) 
        temp[temp_idx++] = nums[right_idx++];
    for (int i = 0; i < right - left + 1; ++i)
        nums[left + i] = temp[i];
}
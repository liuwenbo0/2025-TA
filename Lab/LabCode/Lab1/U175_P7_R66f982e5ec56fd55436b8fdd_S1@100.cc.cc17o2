#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    
     if(left<right){
       int mid=(left+right)/2;
     merge_sort_aux(nums,left,mid);
     merge_sort_aux(nums,mid+1,right);
    int m1=mid-left+1;
    int m2=right-mid;
    vector<int>L(m1);vector<int>R(m2);
    for(int i=0;i<m1;i++){
      L[i]=nums[left+i];
    }
    for(int j=0;j<m2;j++){
      R[j]=nums[mid+1+j];
    }
    int i=0,j=0,k=left;
    while(i<m1&&j<m2){
      if(L[i]<=R[j]){
        nums[k]=L[i++];
      }
      else{
        nums[k]=R[j++];
      }
      k++;
    }
    while(i<m1){
      nums[k++]=L[i++];
    }
    while(j<m2){
      nums[k++]=R[j++];
    }

    }
}
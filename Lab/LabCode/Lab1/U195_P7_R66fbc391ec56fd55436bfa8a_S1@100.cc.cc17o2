#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void merge(std::vector<int> &nums,int left,int mid,int right)
{
	int* ops= new int[right - left +1];  
	int i=left, j=mid +1, p= 0;    
	while (i <= mid && j <= right)  
	{
		if (nums[i]<=nums[j])
		{
			ops[p++]=nums[i++]; 
		}
		else
		{
			ops[p++]=nums[j++];
		}
	}
	while (i<=mid)  
	{
		ops[p++]=nums[i++];
	}
	while (j<=right)
	{
		ops[p++]=nums[j++];
	}
	p=0;  
	for (int i =left; i<= right;i++) 
	{
		nums[i]=ops[p++];
	}
	delete[]ops; 
}
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    if (left < right)
	{
		int mid = (left + right) / 2;
		MergeSort::merge_sort_aux(nums, left, mid);          
		MergeSort::merge_sort_aux(nums, mid + 1, right);    
		merge(nums, left, mid, right);       
	}
}
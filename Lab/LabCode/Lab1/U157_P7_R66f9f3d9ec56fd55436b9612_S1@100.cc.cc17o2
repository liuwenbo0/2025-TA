#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    if(left<right){
		MergeSort::merge_sort_aux(nums, left, (left+right)/2);
		MergeSort::merge_sort_aux(nums, (left+right)/2+1, right);
		int n1=(right+left)/2-left+1, n2=right-(left+right)/2;
	    vector <int> L(n1+1), R(n2+1);
	    for(int i=0; i<n1; i++){
		    L[i]=nums[left+i];
	    }
	    for(int i=0; i<n2; i++){
		    R[i]=nums[(left+right)/2+i+1];
	    }
	    L[n1]=R[n2]=2147483647;
	    
	    /*
	    for(int i=0; i<=n1; i++){
	    	cout << L[i] << " ";
		}
		cout << '\n';
		for(int i=0; i<=n2; i++){
			cout << R[i] << " ";
		}
		*/
		
	    int i=0, j=0;
	    for(int k=left; k<=right; k++){
		    if(L[i]<=R[j]){
			    nums[k]=L[i];
			    i+=1;
		    }
		    else {
			    nums[k]=R[j];
			    j+=1;
		    }
	    }
	}
}
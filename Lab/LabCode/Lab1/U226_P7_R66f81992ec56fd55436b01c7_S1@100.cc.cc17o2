#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    if(left<right){
        int middle=(left+right)/2;
        merge_sort_aux(nums,left,middle);
        merge_sort_aux(nums,middle+1,right);
        int n1,n2,i=0,j=0;
        vector<int> L,R;
        n1=middle-left+1;
        n2=right-middle;
        for(i=0;i<n1;i++){
            L.push_back(nums[left+i]);
        }
        for(j=0;j<n2;j++){
            R.push_back(nums[middle+1+j]);
        }
        i=0,j=0;
        for(int x=0;x<(right-left+1);x++){
            if(i<n1&&j<n2){
            if(L[i]<=R[j]){
                nums[left+x]=L[i];
                i++;
            }
            else if(R[j]<L[i]){
                nums[left+x]=R[j];
                j++;
            }}
            else if(j>=n2&&i<n1){
                nums[left+x]=L[i];
                i++;
            }
            else if(i>=n1&&j<n2){
                nums[left+x]=R[j];
                j++;
            }
        }

    }
    //请在这里完成你的代码
}
#include <iostream>  
#include <vector> 
using namespace std; 

int InsertionSort(vector<int>& nums) {  
    int count = 0;  
    int len = nums.size();  
    for (int j = 1; j < len; j++) {  // 从第二个元素开始，因为第一个元素自然排好  
        int key = nums[j];  
        int i = j - 1; 
        count++; 
        while ((i >= 0) && (nums[i] > key)) { 
            if(i==0) count--;
            nums[i + 1] = nums[i];  
            i--;  
            count++;
        }  
        nums[i + 1] = key;  
    }  
    return count;  
}
int MergeSort(vector<int>& nums, int left, int right) {  
    int count = 0;  
    if (left < right) {  
        int mid = (left + right) / 2;  
        count += MergeSort(nums, left, mid);  
        count += MergeSort(nums, mid + 1, right);  
  
        int n1 = mid - left + 1;  
        int n2 = right - mid;  
        vector<int> L(n1), R(n2);  
        for (int i = 0; i < n1; i++) L[i] = nums[left + i];  
        for (int j = 0; j < n2; j++) R[j] = nums[mid + 1 + j];  
  
        int i = 0, j = 0, k = left;  
        while (i < n1 && j < n2) {  
            if (L[i] <= R[j]) {  
                nums[k] = L[i];  
                i++;  
            } else {  
                nums[k] = R[j];  
                j++;   
            }  
            k++;  
            count++;
        }  
        while (i < n1) {  
            nums[k] = L[i];  
            i++;  
            k++;  
        }  
        while (j < n2) {  
            nums[k] = R[j];  
            j++;  
            k++;  
        }  
    }  
    return count;  
}

int main(){
    int n;
    cin >> n;
    vector<int> nums1(n);
    vector<int> nums2(n);
    for(int i=0;i<n;i++){
        cin>>nums1[i];
        nums2[i]=nums1[i];
    }
    int count1=MergeSort(nums1, 0, n-1);
    int count2=InsertionSort(nums2);
    cout<<count1<<" "<<count2<<endl;
    return 0;
}
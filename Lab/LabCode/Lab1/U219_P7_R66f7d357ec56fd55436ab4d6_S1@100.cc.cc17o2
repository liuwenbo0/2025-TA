#include "MergeSort.h"
    
// 通过归并排序对int队列nums中的[left, right]区间进行升序排序
// @param
// nums: 完整的待排序队列，最终排序的结果应存放在nums中
// left: 当前排序区间的左端点
// right: 当前排序区间的右端点
void MergeSort::merge_sort_aux(std::vector<int> &nums, int left, int right)
{
    //请在这里完成你的代码
    if(left<right){

        int mid = left+(right-left)/2;
        merge_sort_aux(nums,left,mid);
        merge_sort_aux(nums,mid+1,right);
        int n1 = mid-left+1;
        int n2 = right - mid;
        vector<int>num1(n1);
        vector<int>num2(n2);
        for(int i=0;i<n1;i++ )
            num1[i] =nums[left+i]; 
            
        for(int i = 0;i<n2;i++)
            num2[i] = nums[mid+1+i];
        int m = 0;
        int n = 0;
        int k;
        for(k = left;m<n1&&n<n2;k++){
            if(num1[m]>=num2[n]){
                nums[k] = num2[n];
                n++;
            }
            else{
                nums[k] = num1[m];
                m++;
            }
        }
        while(m<n1){
            nums[k]=num1[m];
            k++;
            m++;
        }
        while(n<n2){
            nums[k]=num2[n];
            k++;
            n++;
        }
    }

}
#include <iostream>
#include <vector>
using namespace std;
int count1 = 0, count2 = 0;

void sort(int *nums, int left, int right) {
	if (left >= right) {
		return;
	}
	int mid = left + (right - left) / 2;
	sort(nums, left, mid);
	sort(nums, mid + 1, right);
	vector<int> temp(right - left + 1);
	int i = left, j = mid + 1, k = 0;
	while (i <= mid && j <= right) {
		count1++;
		if (nums[i] <= nums[j]) {
			temp[k++] = nums[i++];
		} else {
			temp[k++] = nums[j++];
		}
	}
	while (i <= mid) {
		temp[k++] = nums[i++];
	}
	while (j <= right) {
		temp[k++] = nums[j++];
	}
	for (i = left, k = 0; i <= right; ++i, ++k) {
		nums[i] = temp[k];
	}
}

void sortbad(int *nums, int n) {
	int mod = 0;
	for (int i = 1; i < n; i++) {
		int key = nums[i];
		int j = i - 1;
		if (nums[j] <= key) {
			count2++;
			mod = 1;
		}
		while (j >= 0 && nums[j] > key) {
			count2 ++;
			nums[j + 1] = nums[j];
			j = j - 1;
		}
		if (j >= 0 && mod == 0) {
			count2++;
		}
		mod = 0;
		nums[j + 1] = key;
	}
}

int main() {
	int n;
	cin >> n;
	int arr[n], brr[n];
	for (int i = 0; i < n; i++) {
		cin >> arr[i];
		brr[i] = arr[i];
	}
	sort(arr, 0, n - 1);
	sortbad(brr, n);
	cout << count1 << " " << count2 << endl;
	return 0;
}
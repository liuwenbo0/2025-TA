#include<iostream>
#include<vector>
using namespace std;

void merge_sort_aux(vector<int>& nums, int left, int right,int& count)
{
    if(left<right){
        int q=(left+right)/2;
        merge_sort_aux(nums,left,q,count);
        merge_sort_aux(nums,q+1,right,count);
        int i=left,j=q+1,k=0;
        vector<int> temp(right - left + 1);
        while(i<=q&&j<=right){
            if(nums[i]<=nums[j]){
                temp[k++]=nums[i++];
            }
            else{
                temp[k++]=nums[j++];
            }
            count++;
        }
        while(i<=q){
            temp[k++]=nums[i++];
        }
        while(j<=right){
            temp[k++]=nums[j++];
        }
        for(int i=0;i<(right-left+1);i++){
            nums[left+i]=temp[i];
        }
    }

}

int main(){
    int n;
    cin>>n;
    vector<int> vec(n),num(n);
    for(int i=0;i<n;i++){
        cin>>vec[i];
    }
    for(int i=0;i<n;i++){
        num[i]=vec[i];
    }
    int count1=0,count2=0;
    int p,value;
    merge_sort_aux(num,0,n-1,count1);
    for(int i=1;i<n;i++){
        value=vec[i];
        p=i-1;
        while(p>=0){
            count2++;
            if(vec[p]>value){
                vec[p+1]=vec[p];
                p--;
            }
            else{
                break;
            }
        }
        vec[p+1]=value;
    }
    cout<<count1<<" "<<count2<<endl;
}
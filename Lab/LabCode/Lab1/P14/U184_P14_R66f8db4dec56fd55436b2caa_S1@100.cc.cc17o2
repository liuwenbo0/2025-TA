#include<iostream>
#include<vector>
#include<cstdio>
using namespace std;
long long MergeSort(vector<int>&nums,int left,int right){
    long long count=0;
    if(left<right){
        int mid=left + (right - left) / 2;
        count+=MergeSort(nums,left,mid);
        count+=MergeSort(nums,mid+1,right);
        vector<int>temp(right - left + 1);  
        int i=left, j=mid+1, k=0;    
        while(i<=mid&&j<=right) {  
            if(nums[i]<=nums[j]) {  
                temp[k++]=nums[i++];  
            }else{  
                temp[k++]=nums[j++];  
                count+=(mid-i+1);  
            }  
        }  
        while(i<=mid) {  
            temp[k++]=nums[i++];  
        }  
        while(j <= right) {  
            temp[k++]=nums[j++];  
        }   
        for(i=0,k=left;i<static_cast<int>(temp.size());i++,k++) {  
            nums[k]=temp[i];  
        }
    }
    return count;
}
int main(){
    int n;
    scanf("%d",&n);
    vector<int> nums(n);
    for(int i=0;i<n;i++){
        scanf("%d", &nums[i]);
    }
    long long count=MergeSort(nums,0,n-1);
    printf("%lld\n", count);
    return 0;
}
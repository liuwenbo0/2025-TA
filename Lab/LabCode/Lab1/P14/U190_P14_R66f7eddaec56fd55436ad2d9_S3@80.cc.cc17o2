#include<iostream>
#include<vector>
using namespace std;
int countInversions_insertionSort(vector<int>A, int length)
{
	int count = 0;
	for (int i = 1; i < length; i++) {
		int key = A[i];
		int j;
		for (j = i - 1; (j >= 0) && (A[j] > key); j--) {
			A[j + 1] = A[j];
			count++;
		}
		A[j + 1] = key;
	}
	return count;
}
int main()
{
	int n;
	cin >> n;
	vector<int>A;
	for (int i = 0; i < n; i++)
	{
		int p = 0;
		cin >> p;
		A.push_back(p);
	}
	vector<int>temp(n);
	int count_out = 0;
	count_out = countInversions_insertionSort(A,int(A.size()));
	cout << count_out << endl;



}
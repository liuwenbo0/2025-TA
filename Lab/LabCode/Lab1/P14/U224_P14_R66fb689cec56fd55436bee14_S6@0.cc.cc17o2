#include <iostream>
#include <vector>
using namespace std;
int count=0;
void merge(vector<int> &nums,int left,int mid,int right){
    int n1=mid-left+1,n2=right-mid;
        vector<int> l1(n1),r1(n2);
        for(int i=0;i<n1;i++){
            l1[i]=nums[left+i];
        }
        for(int i=0;i<n2;i++){
            r1[i]=nums[mid+1+i];
        }
        int i=0,j=0,k=left;
        while(i<n1&&j<n2){
            if(l1[i]<=r1[j]){
                nums[k++]=l1[i++];
                count++;
            }   
            else {
                nums[k++]=r1[j++];
                count++;
            }        
        }
        while(i<n1){
            nums[k++]=l1[i++];
        }
        while(j<n2){
            nums[k++]=r1[j++];
        }
}
void merge_sort(vector<int> &nums,int left,int right){
    if(left<right){
        int mid=left+(right-left)/2;
        merge_sort(nums,left,mid);
        merge_sort(nums,mid+1,right);   
        merge(nums,left,mid,right);
    }
}
int main(){
    int n;
    cin>>n;
    vector<int> nums(n);
    for(int i=0;i<n;i++){
        cin>>nums[i];
    }
    merge_sort(nums,0,n);
    cout<<count<<endl;
}
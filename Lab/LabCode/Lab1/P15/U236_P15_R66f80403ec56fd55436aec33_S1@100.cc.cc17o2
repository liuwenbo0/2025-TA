#include<iostream>
#include<vector>
using namespace std;

void mysort(vector<int>& nums,int &instime)
{
    int n = nums.size();
    int mid;
    for (int i = 1; i < n; i++){
        for (int j = i-1; j >= 0; j--){
            if (nums[j+1] < nums[j]){
                mid = nums[j];
                nums[j] = nums[j+1];
                nums[j+1] = mid;
                instime++;
            }
            else{
                instime++;
                break;
            }
        }
    }
}

void merge_sort(vector<int> &nums, int left, int right, int &mertime)
{
	if (left >= right)
		return;
	int mid = left + (right - left) / 2;
	merge_sort(nums, left, mid, mertime);
	merge_sort(nums, mid + 1, right, mertime);
	vector<int> temp(right - left + 1);
	int i = left, j = mid + 1, k = 0;
	while (i <= mid && j <= right)
	{
		if (nums[i] <= nums[j])
			temp[k++] = nums[i++];
		else
			temp[k++] = nums[j++];
        mertime++;
	}
	while (i <= mid)
		temp[k++] = nums[i++];
	while (j <= right)
		temp[k++] = nums[j++];
	for (int i = 0; i < k; i++)
		nums[left + i] = temp[i];
}

int main()
{
    int n, key, t1 = 0, t2 = 0;
    cin >> n;
    vector<int> array1(n),array2(n);
    for (int i = 0; i < n; i++){
        cin >> key;
        array1[i] = key;
        array2[i] = key;
    }
    mysort(array1, t1);
    merge_sort(array2, 0, n-1, t2);
    cout << t2 << " " << t1 << endl;
}